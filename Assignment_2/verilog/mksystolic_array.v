//
// Generated by Bluespec Compiler, version 2021.12.1 (build fd501401)
//
// On Thu Nov  7 00:20:42 IST 2024
//
//
// Ports:
// Name                         I/O  size props
// RDY_get_A1                     O     1
// RDY_get_A2                     O     1
// RDY_get_A3                     O     1
// RDY_get_A4                     O     1
// RDY_get_B1                     O     1
// RDY_get_B2                     O     1
// RDY_get_B3                     O     1
// RDY_get_B4                     O     1
// RDY_get_C1                     O     1
// RDY_get_C2                     O     1
// RDY_get_C3                     O     1
// RDY_get_C4                     O     1
// RDY_get_S1                     O     1
// RDY_get_S2                     O     1
// RDY_get_S3                     O     1
// RDY_get_S4                     O     1
// output1_MAC                    O    32
// RDY_output1_MAC                O     1
// output2_MAC                    O    32
// RDY_output2_MAC                O     1
// output3_MAC                    O    32
// RDY_output3_MAC                O     1
// output4_MAC                    O    32
// RDY_output4_MAC                O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// get_A1_a                       I    16
// get_A2_a                       I    16
// get_A3_a                       I    16
// get_A4_a                       I    16
// get_B1_b                       I    16
// get_B2_b                       I    16
// get_B3_b                       I    16
// get_B4_b                       I    16
// get_C1_c                       I    32
// get_C2_c                       I    32
// get_C3_c                       I    32
// get_C4_c                       I    32
// get_S1_s                       I     1
// get_S2_s                       I     1
// get_S3_s                       I     1
// get_S4_s                       I     1
// EN_get_A1                      I     1
// EN_get_A2                      I     1
// EN_get_A3                      I     1
// EN_get_A4                      I     1
// EN_get_B1                      I     1
// EN_get_B2                      I     1
// EN_get_B3                      I     1
// EN_get_B4                      I     1
// EN_get_C1                      I     1
// EN_get_C2                      I     1
// EN_get_C3                      I     1
// EN_get_C4                      I     1
// EN_get_S1                      I     1
// EN_get_S2                      I     1
// EN_get_S3                      I     1
// EN_get_S4                      I     1
// EN_output1_MAC                 I     1
// EN_output2_MAC                 I     1
// EN_output3_MAC                 I     1
// EN_output4_MAC                 I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mksystolic_array(CLK,
			RST_N,

			get_A1_a,
			EN_get_A1,
			RDY_get_A1,

			get_A2_a,
			EN_get_A2,
			RDY_get_A2,

			get_A3_a,
			EN_get_A3,
			RDY_get_A3,

			get_A4_a,
			EN_get_A4,
			RDY_get_A4,

			get_B1_b,
			EN_get_B1,
			RDY_get_B1,

			get_B2_b,
			EN_get_B2,
			RDY_get_B2,

			get_B3_b,
			EN_get_B3,
			RDY_get_B3,

			get_B4_b,
			EN_get_B4,
			RDY_get_B4,

			get_C1_c,
			EN_get_C1,
			RDY_get_C1,

			get_C2_c,
			EN_get_C2,
			RDY_get_C2,

			get_C3_c,
			EN_get_C3,
			RDY_get_C3,

			get_C4_c,
			EN_get_C4,
			RDY_get_C4,

			get_S1_s,
			EN_get_S1,
			RDY_get_S1,

			get_S2_s,
			EN_get_S2,
			RDY_get_S2,

			get_S3_s,
			EN_get_S3,
			RDY_get_S3,

			get_S4_s,
			EN_get_S4,
			RDY_get_S4,

			EN_output1_MAC,
			output1_MAC,
			RDY_output1_MAC,

			EN_output2_MAC,
			output2_MAC,
			RDY_output2_MAC,

			EN_output3_MAC,
			output3_MAC,
			RDY_output3_MAC,

			EN_output4_MAC,
			output4_MAC,
			RDY_output4_MAC);
  input  CLK;
  input  RST_N;

  // action method get_A1
  input  [15 : 0] get_A1_a;
  input  EN_get_A1;
  output RDY_get_A1;

  // action method get_A2
  input  [15 : 0] get_A2_a;
  input  EN_get_A2;
  output RDY_get_A2;

  // action method get_A3
  input  [15 : 0] get_A3_a;
  input  EN_get_A3;
  output RDY_get_A3;

  // action method get_A4
  input  [15 : 0] get_A4_a;
  input  EN_get_A4;
  output RDY_get_A4;

  // action method get_B1
  input  [15 : 0] get_B1_b;
  input  EN_get_B1;
  output RDY_get_B1;

  // action method get_B2
  input  [15 : 0] get_B2_b;
  input  EN_get_B2;
  output RDY_get_B2;

  // action method get_B3
  input  [15 : 0] get_B3_b;
  input  EN_get_B3;
  output RDY_get_B3;

  // action method get_B4
  input  [15 : 0] get_B4_b;
  input  EN_get_B4;
  output RDY_get_B4;

  // action method get_C1
  input  [31 : 0] get_C1_c;
  input  EN_get_C1;
  output RDY_get_C1;

  // action method get_C2
  input  [31 : 0] get_C2_c;
  input  EN_get_C2;
  output RDY_get_C2;

  // action method get_C3
  input  [31 : 0] get_C3_c;
  input  EN_get_C3;
  output RDY_get_C3;

  // action method get_C4
  input  [31 : 0] get_C4_c;
  input  EN_get_C4;
  output RDY_get_C4;

  // action method get_S1
  input  get_S1_s;
  input  EN_get_S1;
  output RDY_get_S1;

  // action method get_S2
  input  get_S2_s;
  input  EN_get_S2;
  output RDY_get_S2;

  // action method get_S3
  input  get_S3_s;
  input  EN_get_S3;
  output RDY_get_S3;

  // action method get_S4
  input  get_S4_s;
  input  EN_get_S4;
  output RDY_get_S4;

  // actionvalue method output1_MAC
  input  EN_output1_MAC;
  output [31 : 0] output1_MAC;
  output RDY_output1_MAC;

  // actionvalue method output2_MAC
  input  EN_output2_MAC;
  output [31 : 0] output2_MAC;
  output RDY_output2_MAC;

  // actionvalue method output3_MAC
  input  EN_output3_MAC;
  output [31 : 0] output3_MAC;
  output RDY_output3_MAC;

  // actionvalue method output4_MAC
  input  EN_output4_MAC;
  output [31 : 0] output4_MAC;
  output RDY_output4_MAC;

  // signals for module outputs
  wire [31 : 0] output1_MAC, output2_MAC, output3_MAC, output4_MAC;
  wire RDY_get_A1,
       RDY_get_A2,
       RDY_get_A3,
       RDY_get_A4,
       RDY_get_B1,
       RDY_get_B2,
       RDY_get_B3,
       RDY_get_B4,
       RDY_get_C1,
       RDY_get_C2,
       RDY_get_C3,
       RDY_get_C4,
       RDY_get_S1,
       RDY_get_S2,
       RDY_get_S3,
       RDY_get_S4,
       RDY_output1_MAC,
       RDY_output2_MAC,
       RDY_output3_MAC,
       RDY_output4_MAC;

  // inlined wires
  wire [32 : 0] inpC1_fifo_rv_port0__write_1,
		inpC1_fifo_rv_port1__read,
		inpC1_fifo_rv_port1__write_1,
		inpC1_fifo_rv_port2__read,
		inpC2_fifo_rv_port1__read,
		inpC2_fifo_rv_port1__write_1,
		inpC2_fifo_rv_port2__read,
		inpC3_fifo_rv_port1__read,
		inpC3_fifo_rv_port1__write_1,
		inpC3_fifo_rv_port2__read,
		inpC4_fifo_rv_port1__read,
		inpC4_fifo_rv_port1__write_1,
		inpC4_fifo_rv_port2__read,
		out1_fifo_rv_port1__read,
		out1_fifo_rv_port1__write_1,
		out1_fifo_rv_port2__read,
		out2_fifo_rv_port1__read,
		out2_fifo_rv_port1__write_1,
		out2_fifo_rv_port2__read,
		out3_fifo_rv_port1__read,
		out3_fifo_rv_port1__write_1,
		out3_fifo_rv_port2__read,
		out4_fifo_rv_port1__read,
		out4_fifo_rv_port1__write_1,
		out4_fifo_rv_port2__read;
  wire [16 : 0] inpA1_fifo_rv_port0__write_1,
		inpA1_fifo_rv_port1__read,
		inpA1_fifo_rv_port1__write_1,
		inpA1_fifo_rv_port2__read,
		inpA2_fifo_rv_port1__read,
		inpA2_fifo_rv_port1__write_1,
		inpA2_fifo_rv_port2__read,
		inpA3_fifo_rv_port1__read,
		inpA3_fifo_rv_port1__write_1,
		inpA3_fifo_rv_port2__read,
		inpA4_fifo_rv_port1__read,
		inpA4_fifo_rv_port1__write_1,
		inpA4_fifo_rv_port2__read,
		inpB1_fifo_rv_port1__read,
		inpB1_fifo_rv_port1__write_1,
		inpB1_fifo_rv_port2__read,
		inpB2_fifo_rv_port1__read,
		inpB2_fifo_rv_port1__write_1,
		inpB2_fifo_rv_port2__read,
		inpB3_fifo_rv_port1__read,
		inpB3_fifo_rv_port1__write_1,
		inpB3_fifo_rv_port2__read,
		inpB4_fifo_rv_port1__read,
		inpB4_fifo_rv_port1__write_1,
		inpB4_fifo_rv_port2__read;
  wire [1 : 0] inpS1_fifo_rv_port0__write_1,
	       inpS1_fifo_rv_port1__read,
	       inpS1_fifo_rv_port1__write_1,
	       inpS1_fifo_rv_port2__read,
	       inpS2_fifo_rv_port1__read,
	       inpS2_fifo_rv_port1__write_1,
	       inpS2_fifo_rv_port2__read,
	       inpS3_fifo_rv_port1__read,
	       inpS3_fifo_rv_port1__write_1,
	       inpS3_fifo_rv_port2__read,
	       inpS4_fifo_rv_port1__read,
	       inpS4_fifo_rv_port1__write_1,
	       inpS4_fifo_rv_port2__read;

  // register inpA1_fifo_rv
  reg [16 : 0] inpA1_fifo_rv;
  wire [16 : 0] inpA1_fifo_rv_D_IN;
  wire inpA1_fifo_rv_EN;

  // register inpA2_fifo_rv
  reg [16 : 0] inpA2_fifo_rv;
  wire [16 : 0] inpA2_fifo_rv_D_IN;
  wire inpA2_fifo_rv_EN;

  // register inpA3_fifo_rv
  reg [16 : 0] inpA3_fifo_rv;
  wire [16 : 0] inpA3_fifo_rv_D_IN;
  wire inpA3_fifo_rv_EN;

  // register inpA4_fifo_rv
  reg [16 : 0] inpA4_fifo_rv;
  wire [16 : 0] inpA4_fifo_rv_D_IN;
  wire inpA4_fifo_rv_EN;

  // register inpB1_fifo_rv
  reg [16 : 0] inpB1_fifo_rv;
  wire [16 : 0] inpB1_fifo_rv_D_IN;
  wire inpB1_fifo_rv_EN;

  // register inpB2_fifo_rv
  reg [16 : 0] inpB2_fifo_rv;
  wire [16 : 0] inpB2_fifo_rv_D_IN;
  wire inpB2_fifo_rv_EN;

  // register inpB3_fifo_rv
  reg [16 : 0] inpB3_fifo_rv;
  wire [16 : 0] inpB3_fifo_rv_D_IN;
  wire inpB3_fifo_rv_EN;

  // register inpB4_fifo_rv
  reg [16 : 0] inpB4_fifo_rv;
  wire [16 : 0] inpB4_fifo_rv_D_IN;
  wire inpB4_fifo_rv_EN;

  // register inpC1_fifo_rv
  reg [32 : 0] inpC1_fifo_rv;
  wire [32 : 0] inpC1_fifo_rv_D_IN;
  wire inpC1_fifo_rv_EN;

  // register inpC2_fifo_rv
  reg [32 : 0] inpC2_fifo_rv;
  wire [32 : 0] inpC2_fifo_rv_D_IN;
  wire inpC2_fifo_rv_EN;

  // register inpC3_fifo_rv
  reg [32 : 0] inpC3_fifo_rv;
  wire [32 : 0] inpC3_fifo_rv_D_IN;
  wire inpC3_fifo_rv_EN;

  // register inpC4_fifo_rv
  reg [32 : 0] inpC4_fifo_rv;
  wire [32 : 0] inpC4_fifo_rv_D_IN;
  wire inpC4_fifo_rv_EN;

  // register inpS1_fifo_rv
  reg [1 : 0] inpS1_fifo_rv;
  wire [1 : 0] inpS1_fifo_rv_D_IN;
  wire inpS1_fifo_rv_EN;

  // register inpS2_fifo_rv
  reg [1 : 0] inpS2_fifo_rv;
  wire [1 : 0] inpS2_fifo_rv_D_IN;
  wire inpS2_fifo_rv_EN;

  // register inpS3_fifo_rv
  reg [1 : 0] inpS3_fifo_rv;
  wire [1 : 0] inpS3_fifo_rv_D_IN;
  wire inpS3_fifo_rv_EN;

  // register inpS4_fifo_rv
  reg [1 : 0] inpS4_fifo_rv;
  wire [1 : 0] inpS4_fifo_rv_D_IN;
  wire inpS4_fifo_rv_EN;

  // register out1_fifo_rv
  reg [32 : 0] out1_fifo_rv;
  wire [32 : 0] out1_fifo_rv_D_IN;
  wire out1_fifo_rv_EN;

  // register out2_fifo_rv
  reg [32 : 0] out2_fifo_rv;
  wire [32 : 0] out2_fifo_rv_D_IN;
  wire out2_fifo_rv_EN;

  // register out3_fifo_rv
  reg [32 : 0] out3_fifo_rv;
  wire [32 : 0] out3_fifo_rv_D_IN;
  wire out3_fifo_rv_EN;

  // register out4_fifo_rv
  reg [32 : 0] out4_fifo_rv;
  wire [32 : 0] out4_fifo_rv_D_IN;
  wire out4_fifo_rv_EN;

  // ports of submodule mac_1
  wire [31 : 0] mac_1_get_C_c, mac_1_output_MAC;
  wire [15 : 0] mac_1_get_A_a, mac_1_get_B_b, mac_1_relay_A, mac_1_relay_B;
  wire mac_1_EN_get_A,
       mac_1_EN_get_B,
       mac_1_EN_get_C,
       mac_1_EN_get_S1_or_S2,
       mac_1_EN_output_MAC,
       mac_1_RDY_get_A,
       mac_1_RDY_get_C,
       mac_1_RDY_get_S1_or_S2,
       mac_1_RDY_output_MAC,
       mac_1_RDY_relay_A,
       mac_1_RDY_relay_B,
       mac_1_RDY_relay_S,
       mac_1_get_S1_or_S2_s1_or_s2,
       mac_1_relay_S;

  // ports of submodule mac_10
  wire [31 : 0] mac_10_get_C_c, mac_10_output_MAC;
  wire [15 : 0] mac_10_get_A_a,
		mac_10_get_B_b,
		mac_10_relay_A,
		mac_10_relay_B;
  wire mac_10_EN_get_A,
       mac_10_EN_get_B,
       mac_10_EN_get_C,
       mac_10_EN_get_S1_or_S2,
       mac_10_EN_output_MAC,
       mac_10_RDY_get_A,
       mac_10_RDY_get_C,
       mac_10_RDY_get_S1_or_S2,
       mac_10_RDY_output_MAC,
       mac_10_RDY_relay_A,
       mac_10_RDY_relay_B,
       mac_10_RDY_relay_S,
       mac_10_get_S1_or_S2_s1_or_s2,
       mac_10_relay_S;

  // ports of submodule mac_11
  wire [31 : 0] mac_11_get_C_c, mac_11_output_MAC;
  wire [15 : 0] mac_11_get_A_a,
		mac_11_get_B_b,
		mac_11_relay_A,
		mac_11_relay_B;
  wire mac_11_EN_get_A,
       mac_11_EN_get_B,
       mac_11_EN_get_C,
       mac_11_EN_get_S1_or_S2,
       mac_11_EN_output_MAC,
       mac_11_RDY_get_A,
       mac_11_RDY_get_C,
       mac_11_RDY_get_S1_or_S2,
       mac_11_RDY_output_MAC,
       mac_11_RDY_relay_A,
       mac_11_RDY_relay_B,
       mac_11_RDY_relay_S,
       mac_11_get_S1_or_S2_s1_or_s2,
       mac_11_relay_S;

  // ports of submodule mac_12
  wire [31 : 0] mac_12_get_C_c, mac_12_output_MAC;
  wire [15 : 0] mac_12_get_A_a, mac_12_get_B_b, mac_12_relay_A;
  wire mac_12_EN_get_A,
       mac_12_EN_get_B,
       mac_12_EN_get_C,
       mac_12_EN_get_S1_or_S2,
       mac_12_EN_output_MAC,
       mac_12_RDY_get_A,
       mac_12_RDY_get_C,
       mac_12_RDY_get_S1_or_S2,
       mac_12_RDY_output_MAC,
       mac_12_RDY_relay_A,
       mac_12_get_S1_or_S2_s1_or_s2;

  // ports of submodule mac_13
  wire [31 : 0] mac_13_get_C_c, mac_13_output_MAC;
  wire [15 : 0] mac_13_get_A_a, mac_13_get_B_b, mac_13_relay_B;
  wire mac_13_EN_get_A,
       mac_13_EN_get_B,
       mac_13_EN_get_C,
       mac_13_EN_get_S1_or_S2,
       mac_13_EN_output_MAC,
       mac_13_RDY_get_A,
       mac_13_RDY_get_C,
       mac_13_RDY_get_S1_or_S2,
       mac_13_RDY_output_MAC,
       mac_13_RDY_relay_B,
       mac_13_RDY_relay_S,
       mac_13_get_S1_or_S2_s1_or_s2,
       mac_13_relay_S;

  // ports of submodule mac_14
  wire [31 : 0] mac_14_get_C_c, mac_14_output_MAC;
  wire [15 : 0] mac_14_get_A_a, mac_14_get_B_b, mac_14_relay_B;
  wire mac_14_EN_get_A,
       mac_14_EN_get_B,
       mac_14_EN_get_C,
       mac_14_EN_get_S1_or_S2,
       mac_14_EN_output_MAC,
       mac_14_RDY_get_A,
       mac_14_RDY_get_C,
       mac_14_RDY_get_S1_or_S2,
       mac_14_RDY_output_MAC,
       mac_14_RDY_relay_B,
       mac_14_RDY_relay_S,
       mac_14_get_S1_or_S2_s1_or_s2,
       mac_14_relay_S;

  // ports of submodule mac_15
  wire [31 : 0] mac_15_get_C_c, mac_15_output_MAC;
  wire [15 : 0] mac_15_get_A_a, mac_15_get_B_b, mac_15_relay_B;
  wire mac_15_EN_get_A,
       mac_15_EN_get_B,
       mac_15_EN_get_C,
       mac_15_EN_get_S1_or_S2,
       mac_15_EN_output_MAC,
       mac_15_RDY_get_A,
       mac_15_RDY_get_C,
       mac_15_RDY_get_S1_or_S2,
       mac_15_RDY_output_MAC,
       mac_15_RDY_relay_B,
       mac_15_RDY_relay_S,
       mac_15_get_S1_or_S2_s1_or_s2,
       mac_15_relay_S;

  // ports of submodule mac_16
  wire [31 : 0] mac_16_get_C_c, mac_16_output_MAC;
  wire [15 : 0] mac_16_get_A_a, mac_16_get_B_b;
  wire mac_16_EN_get_A,
       mac_16_EN_get_B,
       mac_16_EN_get_C,
       mac_16_EN_get_S1_or_S2,
       mac_16_EN_output_MAC,
       mac_16_RDY_get_A,
       mac_16_RDY_get_C,
       mac_16_RDY_get_S1_or_S2,
       mac_16_RDY_output_MAC,
       mac_16_get_S1_or_S2_s1_or_s2;

  // ports of submodule mac_2
  wire [31 : 0] mac_2_get_C_c, mac_2_output_MAC;
  wire [15 : 0] mac_2_get_A_a, mac_2_get_B_b, mac_2_relay_A, mac_2_relay_B;
  wire mac_2_EN_get_A,
       mac_2_EN_get_B,
       mac_2_EN_get_C,
       mac_2_EN_get_S1_or_S2,
       mac_2_EN_output_MAC,
       mac_2_RDY_get_A,
       mac_2_RDY_get_C,
       mac_2_RDY_get_S1_or_S2,
       mac_2_RDY_output_MAC,
       mac_2_RDY_relay_A,
       mac_2_RDY_relay_B,
       mac_2_RDY_relay_S,
       mac_2_get_S1_or_S2_s1_or_s2,
       mac_2_relay_S;

  // ports of submodule mac_3
  wire [31 : 0] mac_3_get_C_c, mac_3_output_MAC;
  wire [15 : 0] mac_3_get_A_a, mac_3_get_B_b, mac_3_relay_A, mac_3_relay_B;
  wire mac_3_EN_get_A,
       mac_3_EN_get_B,
       mac_3_EN_get_C,
       mac_3_EN_get_S1_or_S2,
       mac_3_EN_output_MAC,
       mac_3_RDY_get_A,
       mac_3_RDY_get_C,
       mac_3_RDY_get_S1_or_S2,
       mac_3_RDY_output_MAC,
       mac_3_RDY_relay_A,
       mac_3_RDY_relay_B,
       mac_3_RDY_relay_S,
       mac_3_get_S1_or_S2_s1_or_s2,
       mac_3_relay_S;

  // ports of submodule mac_4
  wire [31 : 0] mac_4_get_C_c, mac_4_output_MAC;
  wire [15 : 0] mac_4_get_A_a, mac_4_get_B_b, mac_4_relay_A;
  wire mac_4_EN_get_A,
       mac_4_EN_get_B,
       mac_4_EN_get_C,
       mac_4_EN_get_S1_or_S2,
       mac_4_EN_output_MAC,
       mac_4_RDY_get_A,
       mac_4_RDY_get_C,
       mac_4_RDY_get_S1_or_S2,
       mac_4_RDY_output_MAC,
       mac_4_RDY_relay_A,
       mac_4_get_S1_or_S2_s1_or_s2;

  // ports of submodule mac_5
  wire [31 : 0] mac_5_get_C_c, mac_5_output_MAC;
  wire [15 : 0] mac_5_get_A_a, mac_5_get_B_b, mac_5_relay_A, mac_5_relay_B;
  wire mac_5_EN_get_A,
       mac_5_EN_get_B,
       mac_5_EN_get_C,
       mac_5_EN_get_S1_or_S2,
       mac_5_EN_output_MAC,
       mac_5_RDY_get_A,
       mac_5_RDY_get_C,
       mac_5_RDY_get_S1_or_S2,
       mac_5_RDY_output_MAC,
       mac_5_RDY_relay_A,
       mac_5_RDY_relay_B,
       mac_5_RDY_relay_S,
       mac_5_get_S1_or_S2_s1_or_s2,
       mac_5_relay_S;

  // ports of submodule mac_6
  wire [31 : 0] mac_6_get_C_c, mac_6_output_MAC;
  wire [15 : 0] mac_6_get_A_a, mac_6_get_B_b, mac_6_relay_A, mac_6_relay_B;
  wire mac_6_EN_get_A,
       mac_6_EN_get_B,
       mac_6_EN_get_C,
       mac_6_EN_get_S1_or_S2,
       mac_6_EN_output_MAC,
       mac_6_RDY_get_A,
       mac_6_RDY_get_C,
       mac_6_RDY_get_S1_or_S2,
       mac_6_RDY_output_MAC,
       mac_6_RDY_relay_A,
       mac_6_RDY_relay_B,
       mac_6_RDY_relay_S,
       mac_6_get_S1_or_S2_s1_or_s2,
       mac_6_relay_S;

  // ports of submodule mac_7
  wire [31 : 0] mac_7_get_C_c, mac_7_output_MAC;
  wire [15 : 0] mac_7_get_A_a, mac_7_get_B_b, mac_7_relay_A, mac_7_relay_B;
  wire mac_7_EN_get_A,
       mac_7_EN_get_B,
       mac_7_EN_get_C,
       mac_7_EN_get_S1_or_S2,
       mac_7_EN_output_MAC,
       mac_7_RDY_get_A,
       mac_7_RDY_get_C,
       mac_7_RDY_get_S1_or_S2,
       mac_7_RDY_output_MAC,
       mac_7_RDY_relay_A,
       mac_7_RDY_relay_B,
       mac_7_RDY_relay_S,
       mac_7_get_S1_or_S2_s1_or_s2,
       mac_7_relay_S;

  // ports of submodule mac_8
  wire [31 : 0] mac_8_get_C_c, mac_8_output_MAC;
  wire [15 : 0] mac_8_get_A_a, mac_8_get_B_b, mac_8_relay_A;
  wire mac_8_EN_get_A,
       mac_8_EN_get_B,
       mac_8_EN_get_C,
       mac_8_EN_get_S1_or_S2,
       mac_8_EN_output_MAC,
       mac_8_RDY_get_A,
       mac_8_RDY_get_C,
       mac_8_RDY_get_S1_or_S2,
       mac_8_RDY_output_MAC,
       mac_8_RDY_relay_A,
       mac_8_get_S1_or_S2_s1_or_s2;

  // ports of submodule mac_9
  wire [31 : 0] mac_9_get_C_c, mac_9_output_MAC;
  wire [15 : 0] mac_9_get_A_a, mac_9_get_B_b, mac_9_relay_A, mac_9_relay_B;
  wire mac_9_EN_get_A,
       mac_9_EN_get_B,
       mac_9_EN_get_C,
       mac_9_EN_get_S1_or_S2,
       mac_9_EN_output_MAC,
       mac_9_RDY_get_A,
       mac_9_RDY_get_C,
       mac_9_RDY_get_S1_or_S2,
       mac_9_RDY_output_MAC,
       mac_9_RDY_relay_A,
       mac_9_RDY_relay_B,
       mac_9_RDY_relay_S,
       mac_9_get_S1_or_S2_s1_or_s2,
       mac_9_relay_S;

  // rule scheduling signals
  wire CAN_FIRE_RL_get_ext_inpA1,
       CAN_FIRE_RL_get_ext_inpA2,
       CAN_FIRE_RL_get_ext_inpA3,
       CAN_FIRE_RL_get_ext_inpA4,
       CAN_FIRE_RL_get_ext_inpB1,
       CAN_FIRE_RL_get_ext_inpB2,
       CAN_FIRE_RL_get_ext_inpB3,
       CAN_FIRE_RL_get_ext_inpB4,
       CAN_FIRE_RL_get_ext_inpC1,
       CAN_FIRE_RL_get_ext_inpC2,
       CAN_FIRE_RL_get_ext_inpC3,
       CAN_FIRE_RL_get_ext_inpC4,
       CAN_FIRE_RL_get_ext_inpS1,
       CAN_FIRE_RL_get_ext_inpS2,
       CAN_FIRE_RL_get_ext_inpS3,
       CAN_FIRE_RL_get_ext_inpS4,
       CAN_FIRE_RL_outp1,
       CAN_FIRE_RL_outp2,
       CAN_FIRE_RL_outp3,
       CAN_FIRE_RL_outp4,
       CAN_FIRE_RL_relay_a_10_14,
       CAN_FIRE_RL_relay_a_11_15,
       CAN_FIRE_RL_relay_a_12_16,
       CAN_FIRE_RL_relay_a_1_5,
       CAN_FIRE_RL_relay_a_2_6,
       CAN_FIRE_RL_relay_a_3_7,
       CAN_FIRE_RL_relay_a_4_8,
       CAN_FIRE_RL_relay_a_5_9,
       CAN_FIRE_RL_relay_a_6_10,
       CAN_FIRE_RL_relay_a_7_11,
       CAN_FIRE_RL_relay_a_8_12,
       CAN_FIRE_RL_relay_a_9_13,
       CAN_FIRE_RL_relay_b_10_11,
       CAN_FIRE_RL_relay_b_11_12,
       CAN_FIRE_RL_relay_b_13_14,
       CAN_FIRE_RL_relay_b_14_15,
       CAN_FIRE_RL_relay_b_15_16,
       CAN_FIRE_RL_relay_b_1_2,
       CAN_FIRE_RL_relay_b_2_3,
       CAN_FIRE_RL_relay_b_3_4,
       CAN_FIRE_RL_relay_b_5_6,
       CAN_FIRE_RL_relay_b_6_7,
       CAN_FIRE_RL_relay_b_7_8,
       CAN_FIRE_RL_relay_b_9_10,
       CAN_FIRE_RL_relay_c_10_11,
       CAN_FIRE_RL_relay_c_11_12,
       CAN_FIRE_RL_relay_c_13_14,
       CAN_FIRE_RL_relay_c_14_15,
       CAN_FIRE_RL_relay_c_15_16,
       CAN_FIRE_RL_relay_c_1_2,
       CAN_FIRE_RL_relay_c_2_3,
       CAN_FIRE_RL_relay_c_3_4,
       CAN_FIRE_RL_relay_c_5_6,
       CAN_FIRE_RL_relay_c_6_7,
       CAN_FIRE_RL_relay_c_7_8,
       CAN_FIRE_RL_relay_c_9_10,
       CAN_FIRE_RL_relay_s_10_11,
       CAN_FIRE_RL_relay_s_11_12,
       CAN_FIRE_RL_relay_s_13_14,
       CAN_FIRE_RL_relay_s_14_15,
       CAN_FIRE_RL_relay_s_15_16,
       CAN_FIRE_RL_relay_s_1_2,
       CAN_FIRE_RL_relay_s_2_3,
       CAN_FIRE_RL_relay_s_3_4,
       CAN_FIRE_RL_relay_s_5_6,
       CAN_FIRE_RL_relay_s_6_7,
       CAN_FIRE_RL_relay_s_7_8,
       CAN_FIRE_RL_relay_s_9_10,
       CAN_FIRE_get_A1,
       CAN_FIRE_get_A2,
       CAN_FIRE_get_A3,
       CAN_FIRE_get_A4,
       CAN_FIRE_get_B1,
       CAN_FIRE_get_B2,
       CAN_FIRE_get_B3,
       CAN_FIRE_get_B4,
       CAN_FIRE_get_C1,
       CAN_FIRE_get_C2,
       CAN_FIRE_get_C3,
       CAN_FIRE_get_C4,
       CAN_FIRE_get_S1,
       CAN_FIRE_get_S2,
       CAN_FIRE_get_S3,
       CAN_FIRE_get_S4,
       CAN_FIRE_output1_MAC,
       CAN_FIRE_output2_MAC,
       CAN_FIRE_output3_MAC,
       CAN_FIRE_output4_MAC,
       WILL_FIRE_RL_get_ext_inpA1,
       WILL_FIRE_RL_get_ext_inpA2,
       WILL_FIRE_RL_get_ext_inpA3,
       WILL_FIRE_RL_get_ext_inpA4,
       WILL_FIRE_RL_get_ext_inpB1,
       WILL_FIRE_RL_get_ext_inpB2,
       WILL_FIRE_RL_get_ext_inpB3,
       WILL_FIRE_RL_get_ext_inpB4,
       WILL_FIRE_RL_get_ext_inpC1,
       WILL_FIRE_RL_get_ext_inpC2,
       WILL_FIRE_RL_get_ext_inpC3,
       WILL_FIRE_RL_get_ext_inpC4,
       WILL_FIRE_RL_get_ext_inpS1,
       WILL_FIRE_RL_get_ext_inpS2,
       WILL_FIRE_RL_get_ext_inpS3,
       WILL_FIRE_RL_get_ext_inpS4,
       WILL_FIRE_RL_outp1,
       WILL_FIRE_RL_outp2,
       WILL_FIRE_RL_outp3,
       WILL_FIRE_RL_outp4,
       WILL_FIRE_RL_relay_a_10_14,
       WILL_FIRE_RL_relay_a_11_15,
       WILL_FIRE_RL_relay_a_12_16,
       WILL_FIRE_RL_relay_a_1_5,
       WILL_FIRE_RL_relay_a_2_6,
       WILL_FIRE_RL_relay_a_3_7,
       WILL_FIRE_RL_relay_a_4_8,
       WILL_FIRE_RL_relay_a_5_9,
       WILL_FIRE_RL_relay_a_6_10,
       WILL_FIRE_RL_relay_a_7_11,
       WILL_FIRE_RL_relay_a_8_12,
       WILL_FIRE_RL_relay_a_9_13,
       WILL_FIRE_RL_relay_b_10_11,
       WILL_FIRE_RL_relay_b_11_12,
       WILL_FIRE_RL_relay_b_13_14,
       WILL_FIRE_RL_relay_b_14_15,
       WILL_FIRE_RL_relay_b_15_16,
       WILL_FIRE_RL_relay_b_1_2,
       WILL_FIRE_RL_relay_b_2_3,
       WILL_FIRE_RL_relay_b_3_4,
       WILL_FIRE_RL_relay_b_5_6,
       WILL_FIRE_RL_relay_b_6_7,
       WILL_FIRE_RL_relay_b_7_8,
       WILL_FIRE_RL_relay_b_9_10,
       WILL_FIRE_RL_relay_c_10_11,
       WILL_FIRE_RL_relay_c_11_12,
       WILL_FIRE_RL_relay_c_13_14,
       WILL_FIRE_RL_relay_c_14_15,
       WILL_FIRE_RL_relay_c_15_16,
       WILL_FIRE_RL_relay_c_1_2,
       WILL_FIRE_RL_relay_c_2_3,
       WILL_FIRE_RL_relay_c_3_4,
       WILL_FIRE_RL_relay_c_5_6,
       WILL_FIRE_RL_relay_c_6_7,
       WILL_FIRE_RL_relay_c_7_8,
       WILL_FIRE_RL_relay_c_9_10,
       WILL_FIRE_RL_relay_s_10_11,
       WILL_FIRE_RL_relay_s_11_12,
       WILL_FIRE_RL_relay_s_13_14,
       WILL_FIRE_RL_relay_s_14_15,
       WILL_FIRE_RL_relay_s_15_16,
       WILL_FIRE_RL_relay_s_1_2,
       WILL_FIRE_RL_relay_s_2_3,
       WILL_FIRE_RL_relay_s_3_4,
       WILL_FIRE_RL_relay_s_5_6,
       WILL_FIRE_RL_relay_s_6_7,
       WILL_FIRE_RL_relay_s_7_8,
       WILL_FIRE_RL_relay_s_9_10,
       WILL_FIRE_get_A1,
       WILL_FIRE_get_A2,
       WILL_FIRE_get_A3,
       WILL_FIRE_get_A4,
       WILL_FIRE_get_B1,
       WILL_FIRE_get_B2,
       WILL_FIRE_get_B3,
       WILL_FIRE_get_B4,
       WILL_FIRE_get_C1,
       WILL_FIRE_get_C2,
       WILL_FIRE_get_C3,
       WILL_FIRE_get_C4,
       WILL_FIRE_get_S1,
       WILL_FIRE_get_S2,
       WILL_FIRE_get_S3,
       WILL_FIRE_get_S4,
       WILL_FIRE_output1_MAC,
       WILL_FIRE_output2_MAC,
       WILL_FIRE_output3_MAC,
       WILL_FIRE_output4_MAC;

  // action method get_A1
  assign RDY_get_A1 = !inpA1_fifo_rv_port1__read[16] ;
  assign CAN_FIRE_get_A1 = !inpA1_fifo_rv_port1__read[16] ;
  assign WILL_FIRE_get_A1 = EN_get_A1 ;

  // action method get_A2
  assign RDY_get_A2 = !inpA2_fifo_rv_port1__read[16] ;
  assign CAN_FIRE_get_A2 = !inpA2_fifo_rv_port1__read[16] ;
  assign WILL_FIRE_get_A2 = EN_get_A2 ;

  // action method get_A3
  assign RDY_get_A3 = !inpA3_fifo_rv_port1__read[16] ;
  assign CAN_FIRE_get_A3 = !inpA3_fifo_rv_port1__read[16] ;
  assign WILL_FIRE_get_A3 = EN_get_A3 ;

  // action method get_A4
  assign RDY_get_A4 = !inpA4_fifo_rv_port1__read[16] ;
  assign CAN_FIRE_get_A4 = !inpA4_fifo_rv_port1__read[16] ;
  assign WILL_FIRE_get_A4 = EN_get_A4 ;

  // action method get_B1
  assign RDY_get_B1 = !inpB1_fifo_rv_port1__read[16] ;
  assign CAN_FIRE_get_B1 = !inpB1_fifo_rv_port1__read[16] ;
  assign WILL_FIRE_get_B1 = EN_get_B1 ;

  // action method get_B2
  assign RDY_get_B2 = !inpB2_fifo_rv_port1__read[16] ;
  assign CAN_FIRE_get_B2 = !inpB2_fifo_rv_port1__read[16] ;
  assign WILL_FIRE_get_B2 = EN_get_B2 ;

  // action method get_B3
  assign RDY_get_B3 = !inpB3_fifo_rv_port1__read[16] ;
  assign CAN_FIRE_get_B3 = !inpB3_fifo_rv_port1__read[16] ;
  assign WILL_FIRE_get_B3 = EN_get_B3 ;

  // action method get_B4
  assign RDY_get_B4 = !inpB4_fifo_rv_port1__read[16] ;
  assign CAN_FIRE_get_B4 = !inpB4_fifo_rv_port1__read[16] ;
  assign WILL_FIRE_get_B4 = EN_get_B4 ;

  // action method get_C1
  assign RDY_get_C1 = !inpC1_fifo_rv_port1__read[32] ;
  assign CAN_FIRE_get_C1 = !inpC1_fifo_rv_port1__read[32] ;
  assign WILL_FIRE_get_C1 = EN_get_C1 ;

  // action method get_C2
  assign RDY_get_C2 = !inpC2_fifo_rv_port1__read[32] ;
  assign CAN_FIRE_get_C2 = !inpC2_fifo_rv_port1__read[32] ;
  assign WILL_FIRE_get_C2 = EN_get_C2 ;

  // action method get_C3
  assign RDY_get_C3 = !inpC3_fifo_rv_port1__read[32] ;
  assign CAN_FIRE_get_C3 = !inpC3_fifo_rv_port1__read[32] ;
  assign WILL_FIRE_get_C3 = EN_get_C3 ;

  // action method get_C4
  assign RDY_get_C4 = !inpC4_fifo_rv_port1__read[32] ;
  assign CAN_FIRE_get_C4 = !inpC4_fifo_rv_port1__read[32] ;
  assign WILL_FIRE_get_C4 = EN_get_C4 ;

  // action method get_S1
  assign RDY_get_S1 = !inpS1_fifo_rv_port1__read[1] ;
  assign CAN_FIRE_get_S1 = !inpS1_fifo_rv_port1__read[1] ;
  assign WILL_FIRE_get_S1 = EN_get_S1 ;

  // action method get_S2
  assign RDY_get_S2 = !inpS2_fifo_rv_port1__read[1] ;
  assign CAN_FIRE_get_S2 = !inpS2_fifo_rv_port1__read[1] ;
  assign WILL_FIRE_get_S2 = EN_get_S2 ;

  // action method get_S3
  assign RDY_get_S3 = !inpS3_fifo_rv_port1__read[1] ;
  assign CAN_FIRE_get_S3 = !inpS3_fifo_rv_port1__read[1] ;
  assign WILL_FIRE_get_S3 = EN_get_S3 ;

  // action method get_S4
  assign RDY_get_S4 = !inpS4_fifo_rv_port1__read[1] ;
  assign CAN_FIRE_get_S4 = !inpS4_fifo_rv_port1__read[1] ;
  assign WILL_FIRE_get_S4 = EN_get_S4 ;

  // actionvalue method output1_MAC
  assign output1_MAC = out1_fifo_rv[31:0] ;
  assign RDY_output1_MAC = out1_fifo_rv[32] ;
  assign CAN_FIRE_output1_MAC = out1_fifo_rv[32] ;
  assign WILL_FIRE_output1_MAC = EN_output1_MAC ;

  // actionvalue method output2_MAC
  assign output2_MAC = out2_fifo_rv[31:0] ;
  assign RDY_output2_MAC = out2_fifo_rv[32] ;
  assign CAN_FIRE_output2_MAC = out2_fifo_rv[32] ;
  assign WILL_FIRE_output2_MAC = EN_output2_MAC ;

  // actionvalue method output3_MAC
  assign output3_MAC = out3_fifo_rv[31:0] ;
  assign RDY_output3_MAC = out3_fifo_rv[32] ;
  assign CAN_FIRE_output3_MAC = out3_fifo_rv[32] ;
  assign WILL_FIRE_output3_MAC = EN_output3_MAC ;

  // actionvalue method output4_MAC
  assign output4_MAC = out4_fifo_rv[31:0] ;
  assign RDY_output4_MAC = out4_fifo_rv[32] ;
  assign CAN_FIRE_output4_MAC = out4_fifo_rv[32] ;
  assign WILL_FIRE_output4_MAC = EN_output4_MAC ;

  // submodule mac_1
  mkMAC_with_wrapper mac_1(.CLK(CLK),
			   .RST_N(RST_N),
			   .get_A_a(mac_1_get_A_a),
			   .get_B_b(mac_1_get_B_b),
			   .get_C_c(mac_1_get_C_c),
			   .get_S1_or_S2_s1_or_s2(mac_1_get_S1_or_S2_s1_or_s2),
			   .EN_get_A(mac_1_EN_get_A),
			   .EN_get_B(mac_1_EN_get_B),
			   .EN_get_C(mac_1_EN_get_C),
			   .EN_get_S1_or_S2(mac_1_EN_get_S1_or_S2),
			   .EN_output_MAC(mac_1_EN_output_MAC),
			   .RDY_get_A(mac_1_RDY_get_A),
			   .RDY_get_B(),
			   .RDY_get_C(mac_1_RDY_get_C),
			   .RDY_get_S1_or_S2(mac_1_RDY_get_S1_or_S2),
			   .output_MAC(mac_1_output_MAC),
			   .RDY_output_MAC(mac_1_RDY_output_MAC),
			   .relay_A(mac_1_relay_A),
			   .RDY_relay_A(mac_1_RDY_relay_A),
			   .relay_B(mac_1_relay_B),
			   .RDY_relay_B(mac_1_RDY_relay_B),
			   .relay_S(mac_1_relay_S),
			   .RDY_relay_S(mac_1_RDY_relay_S));

  // submodule mac_10
  mkMAC_with_wrapper mac_10(.CLK(CLK),
			    .RST_N(RST_N),
			    .get_A_a(mac_10_get_A_a),
			    .get_B_b(mac_10_get_B_b),
			    .get_C_c(mac_10_get_C_c),
			    .get_S1_or_S2_s1_or_s2(mac_10_get_S1_or_S2_s1_or_s2),
			    .EN_get_A(mac_10_EN_get_A),
			    .EN_get_B(mac_10_EN_get_B),
			    .EN_get_C(mac_10_EN_get_C),
			    .EN_get_S1_or_S2(mac_10_EN_get_S1_or_S2),
			    .EN_output_MAC(mac_10_EN_output_MAC),
			    .RDY_get_A(mac_10_RDY_get_A),
			    .RDY_get_B(),
			    .RDY_get_C(mac_10_RDY_get_C),
			    .RDY_get_S1_or_S2(mac_10_RDY_get_S1_or_S2),
			    .output_MAC(mac_10_output_MAC),
			    .RDY_output_MAC(mac_10_RDY_output_MAC),
			    .relay_A(mac_10_relay_A),
			    .RDY_relay_A(mac_10_RDY_relay_A),
			    .relay_B(mac_10_relay_B),
			    .RDY_relay_B(mac_10_RDY_relay_B),
			    .relay_S(mac_10_relay_S),
			    .RDY_relay_S(mac_10_RDY_relay_S));

  // submodule mac_11
  mkMAC_with_wrapper mac_11(.CLK(CLK),
			    .RST_N(RST_N),
			    .get_A_a(mac_11_get_A_a),
			    .get_B_b(mac_11_get_B_b),
			    .get_C_c(mac_11_get_C_c),
			    .get_S1_or_S2_s1_or_s2(mac_11_get_S1_or_S2_s1_or_s2),
			    .EN_get_A(mac_11_EN_get_A),
			    .EN_get_B(mac_11_EN_get_B),
			    .EN_get_C(mac_11_EN_get_C),
			    .EN_get_S1_or_S2(mac_11_EN_get_S1_or_S2),
			    .EN_output_MAC(mac_11_EN_output_MAC),
			    .RDY_get_A(mac_11_RDY_get_A),
			    .RDY_get_B(),
			    .RDY_get_C(mac_11_RDY_get_C),
			    .RDY_get_S1_or_S2(mac_11_RDY_get_S1_or_S2),
			    .output_MAC(mac_11_output_MAC),
			    .RDY_output_MAC(mac_11_RDY_output_MAC),
			    .relay_A(mac_11_relay_A),
			    .RDY_relay_A(mac_11_RDY_relay_A),
			    .relay_B(mac_11_relay_B),
			    .RDY_relay_B(mac_11_RDY_relay_B),
			    .relay_S(mac_11_relay_S),
			    .RDY_relay_S(mac_11_RDY_relay_S));

  // submodule mac_12
  mkMAC_with_wrapper mac_12(.CLK(CLK),
			    .RST_N(RST_N),
			    .get_A_a(mac_12_get_A_a),
			    .get_B_b(mac_12_get_B_b),
			    .get_C_c(mac_12_get_C_c),
			    .get_S1_or_S2_s1_or_s2(mac_12_get_S1_or_S2_s1_or_s2),
			    .EN_get_A(mac_12_EN_get_A),
			    .EN_get_B(mac_12_EN_get_B),
			    .EN_get_C(mac_12_EN_get_C),
			    .EN_get_S1_or_S2(mac_12_EN_get_S1_or_S2),
			    .EN_output_MAC(mac_12_EN_output_MAC),
			    .RDY_get_A(mac_12_RDY_get_A),
			    .RDY_get_B(),
			    .RDY_get_C(mac_12_RDY_get_C),
			    .RDY_get_S1_or_S2(mac_12_RDY_get_S1_or_S2),
			    .output_MAC(mac_12_output_MAC),
			    .RDY_output_MAC(mac_12_RDY_output_MAC),
			    .relay_A(mac_12_relay_A),
			    .RDY_relay_A(mac_12_RDY_relay_A),
			    .relay_B(),
			    .RDY_relay_B(),
			    .relay_S(),
			    .RDY_relay_S());

  // submodule mac_13
  mkMAC_with_wrapper mac_13(.CLK(CLK),
			    .RST_N(RST_N),
			    .get_A_a(mac_13_get_A_a),
			    .get_B_b(mac_13_get_B_b),
			    .get_C_c(mac_13_get_C_c),
			    .get_S1_or_S2_s1_or_s2(mac_13_get_S1_or_S2_s1_or_s2),
			    .EN_get_A(mac_13_EN_get_A),
			    .EN_get_B(mac_13_EN_get_B),
			    .EN_get_C(mac_13_EN_get_C),
			    .EN_get_S1_or_S2(mac_13_EN_get_S1_or_S2),
			    .EN_output_MAC(mac_13_EN_output_MAC),
			    .RDY_get_A(mac_13_RDY_get_A),
			    .RDY_get_B(),
			    .RDY_get_C(mac_13_RDY_get_C),
			    .RDY_get_S1_or_S2(mac_13_RDY_get_S1_or_S2),
			    .output_MAC(mac_13_output_MAC),
			    .RDY_output_MAC(mac_13_RDY_output_MAC),
			    .relay_A(),
			    .RDY_relay_A(),
			    .relay_B(mac_13_relay_B),
			    .RDY_relay_B(mac_13_RDY_relay_B),
			    .relay_S(mac_13_relay_S),
			    .RDY_relay_S(mac_13_RDY_relay_S));

  // submodule mac_14
  mkMAC_with_wrapper mac_14(.CLK(CLK),
			    .RST_N(RST_N),
			    .get_A_a(mac_14_get_A_a),
			    .get_B_b(mac_14_get_B_b),
			    .get_C_c(mac_14_get_C_c),
			    .get_S1_or_S2_s1_or_s2(mac_14_get_S1_or_S2_s1_or_s2),
			    .EN_get_A(mac_14_EN_get_A),
			    .EN_get_B(mac_14_EN_get_B),
			    .EN_get_C(mac_14_EN_get_C),
			    .EN_get_S1_or_S2(mac_14_EN_get_S1_or_S2),
			    .EN_output_MAC(mac_14_EN_output_MAC),
			    .RDY_get_A(mac_14_RDY_get_A),
			    .RDY_get_B(),
			    .RDY_get_C(mac_14_RDY_get_C),
			    .RDY_get_S1_or_S2(mac_14_RDY_get_S1_or_S2),
			    .output_MAC(mac_14_output_MAC),
			    .RDY_output_MAC(mac_14_RDY_output_MAC),
			    .relay_A(),
			    .RDY_relay_A(),
			    .relay_B(mac_14_relay_B),
			    .RDY_relay_B(mac_14_RDY_relay_B),
			    .relay_S(mac_14_relay_S),
			    .RDY_relay_S(mac_14_RDY_relay_S));

  // submodule mac_15
  mkMAC_with_wrapper mac_15(.CLK(CLK),
			    .RST_N(RST_N),
			    .get_A_a(mac_15_get_A_a),
			    .get_B_b(mac_15_get_B_b),
			    .get_C_c(mac_15_get_C_c),
			    .get_S1_or_S2_s1_or_s2(mac_15_get_S1_or_S2_s1_or_s2),
			    .EN_get_A(mac_15_EN_get_A),
			    .EN_get_B(mac_15_EN_get_B),
			    .EN_get_C(mac_15_EN_get_C),
			    .EN_get_S1_or_S2(mac_15_EN_get_S1_or_S2),
			    .EN_output_MAC(mac_15_EN_output_MAC),
			    .RDY_get_A(mac_15_RDY_get_A),
			    .RDY_get_B(),
			    .RDY_get_C(mac_15_RDY_get_C),
			    .RDY_get_S1_or_S2(mac_15_RDY_get_S1_or_S2),
			    .output_MAC(mac_15_output_MAC),
			    .RDY_output_MAC(mac_15_RDY_output_MAC),
			    .relay_A(),
			    .RDY_relay_A(),
			    .relay_B(mac_15_relay_B),
			    .RDY_relay_B(mac_15_RDY_relay_B),
			    .relay_S(mac_15_relay_S),
			    .RDY_relay_S(mac_15_RDY_relay_S));

  // submodule mac_16
  mkMAC_with_wrapper mac_16(.CLK(CLK),
			    .RST_N(RST_N),
			    .get_A_a(mac_16_get_A_a),
			    .get_B_b(mac_16_get_B_b),
			    .get_C_c(mac_16_get_C_c),
			    .get_S1_or_S2_s1_or_s2(mac_16_get_S1_or_S2_s1_or_s2),
			    .EN_get_A(mac_16_EN_get_A),
			    .EN_get_B(mac_16_EN_get_B),
			    .EN_get_C(mac_16_EN_get_C),
			    .EN_get_S1_or_S2(mac_16_EN_get_S1_or_S2),
			    .EN_output_MAC(mac_16_EN_output_MAC),
			    .RDY_get_A(mac_16_RDY_get_A),
			    .RDY_get_B(),
			    .RDY_get_C(mac_16_RDY_get_C),
			    .RDY_get_S1_or_S2(mac_16_RDY_get_S1_or_S2),
			    .output_MAC(mac_16_output_MAC),
			    .RDY_output_MAC(mac_16_RDY_output_MAC),
			    .relay_A(),
			    .RDY_relay_A(),
			    .relay_B(),
			    .RDY_relay_B(),
			    .relay_S(),
			    .RDY_relay_S());

  // submodule mac_2
  mkMAC_with_wrapper mac_2(.CLK(CLK),
			   .RST_N(RST_N),
			   .get_A_a(mac_2_get_A_a),
			   .get_B_b(mac_2_get_B_b),
			   .get_C_c(mac_2_get_C_c),
			   .get_S1_or_S2_s1_or_s2(mac_2_get_S1_or_S2_s1_or_s2),
			   .EN_get_A(mac_2_EN_get_A),
			   .EN_get_B(mac_2_EN_get_B),
			   .EN_get_C(mac_2_EN_get_C),
			   .EN_get_S1_or_S2(mac_2_EN_get_S1_or_S2),
			   .EN_output_MAC(mac_2_EN_output_MAC),
			   .RDY_get_A(mac_2_RDY_get_A),
			   .RDY_get_B(),
			   .RDY_get_C(mac_2_RDY_get_C),
			   .RDY_get_S1_or_S2(mac_2_RDY_get_S1_or_S2),
			   .output_MAC(mac_2_output_MAC),
			   .RDY_output_MAC(mac_2_RDY_output_MAC),
			   .relay_A(mac_2_relay_A),
			   .RDY_relay_A(mac_2_RDY_relay_A),
			   .relay_B(mac_2_relay_B),
			   .RDY_relay_B(mac_2_RDY_relay_B),
			   .relay_S(mac_2_relay_S),
			   .RDY_relay_S(mac_2_RDY_relay_S));

  // submodule mac_3
  mkMAC_with_wrapper mac_3(.CLK(CLK),
			   .RST_N(RST_N),
			   .get_A_a(mac_3_get_A_a),
			   .get_B_b(mac_3_get_B_b),
			   .get_C_c(mac_3_get_C_c),
			   .get_S1_or_S2_s1_or_s2(mac_3_get_S1_or_S2_s1_or_s2),
			   .EN_get_A(mac_3_EN_get_A),
			   .EN_get_B(mac_3_EN_get_B),
			   .EN_get_C(mac_3_EN_get_C),
			   .EN_get_S1_or_S2(mac_3_EN_get_S1_or_S2),
			   .EN_output_MAC(mac_3_EN_output_MAC),
			   .RDY_get_A(mac_3_RDY_get_A),
			   .RDY_get_B(),
			   .RDY_get_C(mac_3_RDY_get_C),
			   .RDY_get_S1_or_S2(mac_3_RDY_get_S1_or_S2),
			   .output_MAC(mac_3_output_MAC),
			   .RDY_output_MAC(mac_3_RDY_output_MAC),
			   .relay_A(mac_3_relay_A),
			   .RDY_relay_A(mac_3_RDY_relay_A),
			   .relay_B(mac_3_relay_B),
			   .RDY_relay_B(mac_3_RDY_relay_B),
			   .relay_S(mac_3_relay_S),
			   .RDY_relay_S(mac_3_RDY_relay_S));

  // submodule mac_4
  mkMAC_with_wrapper mac_4(.CLK(CLK),
			   .RST_N(RST_N),
			   .get_A_a(mac_4_get_A_a),
			   .get_B_b(mac_4_get_B_b),
			   .get_C_c(mac_4_get_C_c),
			   .get_S1_or_S2_s1_or_s2(mac_4_get_S1_or_S2_s1_or_s2),
			   .EN_get_A(mac_4_EN_get_A),
			   .EN_get_B(mac_4_EN_get_B),
			   .EN_get_C(mac_4_EN_get_C),
			   .EN_get_S1_or_S2(mac_4_EN_get_S1_or_S2),
			   .EN_output_MAC(mac_4_EN_output_MAC),
			   .RDY_get_A(mac_4_RDY_get_A),
			   .RDY_get_B(),
			   .RDY_get_C(mac_4_RDY_get_C),
			   .RDY_get_S1_or_S2(mac_4_RDY_get_S1_or_S2),
			   .output_MAC(mac_4_output_MAC),
			   .RDY_output_MAC(mac_4_RDY_output_MAC),
			   .relay_A(mac_4_relay_A),
			   .RDY_relay_A(mac_4_RDY_relay_A),
			   .relay_B(),
			   .RDY_relay_B(),
			   .relay_S(),
			   .RDY_relay_S());

  // submodule mac_5
  mkMAC_with_wrapper mac_5(.CLK(CLK),
			   .RST_N(RST_N),
			   .get_A_a(mac_5_get_A_a),
			   .get_B_b(mac_5_get_B_b),
			   .get_C_c(mac_5_get_C_c),
			   .get_S1_or_S2_s1_or_s2(mac_5_get_S1_or_S2_s1_or_s2),
			   .EN_get_A(mac_5_EN_get_A),
			   .EN_get_B(mac_5_EN_get_B),
			   .EN_get_C(mac_5_EN_get_C),
			   .EN_get_S1_or_S2(mac_5_EN_get_S1_or_S2),
			   .EN_output_MAC(mac_5_EN_output_MAC),
			   .RDY_get_A(mac_5_RDY_get_A),
			   .RDY_get_B(),
			   .RDY_get_C(mac_5_RDY_get_C),
			   .RDY_get_S1_or_S2(mac_5_RDY_get_S1_or_S2),
			   .output_MAC(mac_5_output_MAC),
			   .RDY_output_MAC(mac_5_RDY_output_MAC),
			   .relay_A(mac_5_relay_A),
			   .RDY_relay_A(mac_5_RDY_relay_A),
			   .relay_B(mac_5_relay_B),
			   .RDY_relay_B(mac_5_RDY_relay_B),
			   .relay_S(mac_5_relay_S),
			   .RDY_relay_S(mac_5_RDY_relay_S));

  // submodule mac_6
  mkMAC_with_wrapper mac_6(.CLK(CLK),
			   .RST_N(RST_N),
			   .get_A_a(mac_6_get_A_a),
			   .get_B_b(mac_6_get_B_b),
			   .get_C_c(mac_6_get_C_c),
			   .get_S1_or_S2_s1_or_s2(mac_6_get_S1_or_S2_s1_or_s2),
			   .EN_get_A(mac_6_EN_get_A),
			   .EN_get_B(mac_6_EN_get_B),
			   .EN_get_C(mac_6_EN_get_C),
			   .EN_get_S1_or_S2(mac_6_EN_get_S1_or_S2),
			   .EN_output_MAC(mac_6_EN_output_MAC),
			   .RDY_get_A(mac_6_RDY_get_A),
			   .RDY_get_B(),
			   .RDY_get_C(mac_6_RDY_get_C),
			   .RDY_get_S1_or_S2(mac_6_RDY_get_S1_or_S2),
			   .output_MAC(mac_6_output_MAC),
			   .RDY_output_MAC(mac_6_RDY_output_MAC),
			   .relay_A(mac_6_relay_A),
			   .RDY_relay_A(mac_6_RDY_relay_A),
			   .relay_B(mac_6_relay_B),
			   .RDY_relay_B(mac_6_RDY_relay_B),
			   .relay_S(mac_6_relay_S),
			   .RDY_relay_S(mac_6_RDY_relay_S));

  // submodule mac_7
  mkMAC_with_wrapper mac_7(.CLK(CLK),
			   .RST_N(RST_N),
			   .get_A_a(mac_7_get_A_a),
			   .get_B_b(mac_7_get_B_b),
			   .get_C_c(mac_7_get_C_c),
			   .get_S1_or_S2_s1_or_s2(mac_7_get_S1_or_S2_s1_or_s2),
			   .EN_get_A(mac_7_EN_get_A),
			   .EN_get_B(mac_7_EN_get_B),
			   .EN_get_C(mac_7_EN_get_C),
			   .EN_get_S1_or_S2(mac_7_EN_get_S1_or_S2),
			   .EN_output_MAC(mac_7_EN_output_MAC),
			   .RDY_get_A(mac_7_RDY_get_A),
			   .RDY_get_B(),
			   .RDY_get_C(mac_7_RDY_get_C),
			   .RDY_get_S1_or_S2(mac_7_RDY_get_S1_or_S2),
			   .output_MAC(mac_7_output_MAC),
			   .RDY_output_MAC(mac_7_RDY_output_MAC),
			   .relay_A(mac_7_relay_A),
			   .RDY_relay_A(mac_7_RDY_relay_A),
			   .relay_B(mac_7_relay_B),
			   .RDY_relay_B(mac_7_RDY_relay_B),
			   .relay_S(mac_7_relay_S),
			   .RDY_relay_S(mac_7_RDY_relay_S));

  // submodule mac_8
  mkMAC_with_wrapper mac_8(.CLK(CLK),
			   .RST_N(RST_N),
			   .get_A_a(mac_8_get_A_a),
			   .get_B_b(mac_8_get_B_b),
			   .get_C_c(mac_8_get_C_c),
			   .get_S1_or_S2_s1_or_s2(mac_8_get_S1_or_S2_s1_or_s2),
			   .EN_get_A(mac_8_EN_get_A),
			   .EN_get_B(mac_8_EN_get_B),
			   .EN_get_C(mac_8_EN_get_C),
			   .EN_get_S1_or_S2(mac_8_EN_get_S1_or_S2),
			   .EN_output_MAC(mac_8_EN_output_MAC),
			   .RDY_get_A(mac_8_RDY_get_A),
			   .RDY_get_B(),
			   .RDY_get_C(mac_8_RDY_get_C),
			   .RDY_get_S1_or_S2(mac_8_RDY_get_S1_or_S2),
			   .output_MAC(mac_8_output_MAC),
			   .RDY_output_MAC(mac_8_RDY_output_MAC),
			   .relay_A(mac_8_relay_A),
			   .RDY_relay_A(mac_8_RDY_relay_A),
			   .relay_B(),
			   .RDY_relay_B(),
			   .relay_S(),
			   .RDY_relay_S());

  // submodule mac_9
  mkMAC_with_wrapper mac_9(.CLK(CLK),
			   .RST_N(RST_N),
			   .get_A_a(mac_9_get_A_a),
			   .get_B_b(mac_9_get_B_b),
			   .get_C_c(mac_9_get_C_c),
			   .get_S1_or_S2_s1_or_s2(mac_9_get_S1_or_S2_s1_or_s2),
			   .EN_get_A(mac_9_EN_get_A),
			   .EN_get_B(mac_9_EN_get_B),
			   .EN_get_C(mac_9_EN_get_C),
			   .EN_get_S1_or_S2(mac_9_EN_get_S1_or_S2),
			   .EN_output_MAC(mac_9_EN_output_MAC),
			   .RDY_get_A(mac_9_RDY_get_A),
			   .RDY_get_B(),
			   .RDY_get_C(mac_9_RDY_get_C),
			   .RDY_get_S1_or_S2(mac_9_RDY_get_S1_or_S2),
			   .output_MAC(mac_9_output_MAC),
			   .RDY_output_MAC(mac_9_RDY_output_MAC),
			   .relay_A(mac_9_relay_A),
			   .RDY_relay_A(mac_9_RDY_relay_A),
			   .relay_B(mac_9_relay_B),
			   .RDY_relay_B(mac_9_RDY_relay_B),
			   .relay_S(mac_9_relay_S),
			   .RDY_relay_S(mac_9_RDY_relay_S));

  // rule RL_outp1
  assign CAN_FIRE_RL_outp1 =
	     mac_4_RDY_output_MAC && !out1_fifo_rv_port1__read[32] ;
  assign WILL_FIRE_RL_outp1 = CAN_FIRE_RL_outp1 ;

  // rule RL_get_ext_inpA4
  assign CAN_FIRE_RL_get_ext_inpA4 = inpA4_fifo_rv[16] && mac_4_RDY_get_A ;
  assign WILL_FIRE_RL_get_ext_inpA4 = CAN_FIRE_RL_get_ext_inpA4 ;

  // rule RL_relay_b_3_4
  assign CAN_FIRE_RL_relay_b_3_4 = mac_3_RDY_relay_B ;
  assign WILL_FIRE_RL_relay_b_3_4 = mac_3_RDY_relay_B ;

  // rule RL_relay_c_3_4
  assign CAN_FIRE_RL_relay_c_3_4 = mac_4_RDY_get_C && mac_3_RDY_output_MAC ;
  assign WILL_FIRE_RL_relay_c_3_4 = CAN_FIRE_RL_relay_c_3_4 ;

  // rule RL_get_ext_inpA3
  assign CAN_FIRE_RL_get_ext_inpA3 = inpA3_fifo_rv[16] && mac_3_RDY_get_A ;
  assign WILL_FIRE_RL_get_ext_inpA3 = CAN_FIRE_RL_get_ext_inpA3 ;

  // rule RL_relay_b_2_3
  assign CAN_FIRE_RL_relay_b_2_3 = mac_2_RDY_relay_B ;
  assign WILL_FIRE_RL_relay_b_2_3 = mac_2_RDY_relay_B ;

  // rule RL_relay_c_2_3
  assign CAN_FIRE_RL_relay_c_2_3 = mac_3_RDY_get_C && mac_2_RDY_output_MAC ;
  assign WILL_FIRE_RL_relay_c_2_3 = CAN_FIRE_RL_relay_c_2_3 ;

  // rule RL_get_ext_inpA2
  assign CAN_FIRE_RL_get_ext_inpA2 = inpA2_fifo_rv[16] && mac_2_RDY_get_A ;
  assign WILL_FIRE_RL_get_ext_inpA2 = CAN_FIRE_RL_get_ext_inpA2 ;

  // rule RL_relay_b_1_2
  assign CAN_FIRE_RL_relay_b_1_2 = mac_1_RDY_relay_B ;
  assign WILL_FIRE_RL_relay_b_1_2 = mac_1_RDY_relay_B ;

  // rule RL_relay_c_1_2
  assign CAN_FIRE_RL_relay_c_1_2 = mac_2_RDY_get_C && mac_1_RDY_output_MAC ;
  assign WILL_FIRE_RL_relay_c_1_2 = CAN_FIRE_RL_relay_c_1_2 ;

  // rule RL_get_ext_inpA1
  assign CAN_FIRE_RL_get_ext_inpA1 = inpA1_fifo_rv[16] && mac_1_RDY_get_A ;
  assign WILL_FIRE_RL_get_ext_inpA1 = CAN_FIRE_RL_get_ext_inpA1 ;

  // rule RL_get_ext_inpB1
  assign CAN_FIRE_RL_get_ext_inpB1 = inpB1_fifo_rv[16] ;
  assign WILL_FIRE_RL_get_ext_inpB1 = CAN_FIRE_RL_get_ext_inpB1 ;

  // rule RL_get_ext_inpC1
  assign CAN_FIRE_RL_get_ext_inpC1 = inpC1_fifo_rv[32] && mac_1_RDY_get_C ;
  assign WILL_FIRE_RL_get_ext_inpC1 = CAN_FIRE_RL_get_ext_inpC1 ;

  // rule RL_get_ext_inpS1
  assign CAN_FIRE_RL_get_ext_inpS1 =
	     inpS1_fifo_rv[1] && mac_1_RDY_get_S1_or_S2 ;
  assign WILL_FIRE_RL_get_ext_inpS1 = CAN_FIRE_RL_get_ext_inpS1 ;

  // rule RL_relay_s_1_2
  assign CAN_FIRE_RL_relay_s_1_2 =
	     mac_1_RDY_relay_S && mac_2_RDY_get_S1_or_S2 ;
  assign WILL_FIRE_RL_relay_s_1_2 = CAN_FIRE_RL_relay_s_1_2 ;

  // rule RL_relay_s_2_3
  assign CAN_FIRE_RL_relay_s_2_3 =
	     mac_2_RDY_relay_S && mac_3_RDY_get_S1_or_S2 ;
  assign WILL_FIRE_RL_relay_s_2_3 = CAN_FIRE_RL_relay_s_2_3 ;

  // rule RL_relay_s_3_4
  assign CAN_FIRE_RL_relay_s_3_4 =
	     mac_3_RDY_relay_S && mac_4_RDY_get_S1_or_S2 ;
  assign WILL_FIRE_RL_relay_s_3_4 = CAN_FIRE_RL_relay_s_3_4 ;

  // rule RL_outp2
  assign CAN_FIRE_RL_outp2 =
	     mac_8_RDY_output_MAC && !out2_fifo_rv_port1__read[32] ;
  assign WILL_FIRE_RL_outp2 = CAN_FIRE_RL_outp2 ;

  // rule RL_relay_a_4_8
  assign CAN_FIRE_RL_relay_a_4_8 = mac_8_RDY_get_A && mac_4_RDY_relay_A ;
  assign WILL_FIRE_RL_relay_a_4_8 = CAN_FIRE_RL_relay_a_4_8 ;

  // rule RL_relay_b_7_8
  assign CAN_FIRE_RL_relay_b_7_8 = mac_7_RDY_relay_B ;
  assign WILL_FIRE_RL_relay_b_7_8 = mac_7_RDY_relay_B ;

  // rule RL_relay_c_7_8
  assign CAN_FIRE_RL_relay_c_7_8 = mac_8_RDY_get_C && mac_7_RDY_output_MAC ;
  assign WILL_FIRE_RL_relay_c_7_8 = CAN_FIRE_RL_relay_c_7_8 ;

  // rule RL_relay_a_3_7
  assign CAN_FIRE_RL_relay_a_3_7 = mac_7_RDY_get_A && mac_3_RDY_relay_A ;
  assign WILL_FIRE_RL_relay_a_3_7 = CAN_FIRE_RL_relay_a_3_7 ;

  // rule RL_relay_b_6_7
  assign CAN_FIRE_RL_relay_b_6_7 = mac_6_RDY_relay_B ;
  assign WILL_FIRE_RL_relay_b_6_7 = mac_6_RDY_relay_B ;

  // rule RL_relay_c_6_7
  assign CAN_FIRE_RL_relay_c_6_7 = mac_7_RDY_get_C && mac_6_RDY_output_MAC ;
  assign WILL_FIRE_RL_relay_c_6_7 = CAN_FIRE_RL_relay_c_6_7 ;

  // rule RL_relay_a_2_6
  assign CAN_FIRE_RL_relay_a_2_6 = mac_6_RDY_get_A && mac_2_RDY_relay_A ;
  assign WILL_FIRE_RL_relay_a_2_6 = CAN_FIRE_RL_relay_a_2_6 ;

  // rule RL_relay_b_5_6
  assign CAN_FIRE_RL_relay_b_5_6 = mac_5_RDY_relay_B ;
  assign WILL_FIRE_RL_relay_b_5_6 = mac_5_RDY_relay_B ;

  // rule RL_relay_c_5_6
  assign CAN_FIRE_RL_relay_c_5_6 = mac_6_RDY_get_C && mac_5_RDY_output_MAC ;
  assign WILL_FIRE_RL_relay_c_5_6 = CAN_FIRE_RL_relay_c_5_6 ;

  // rule RL_relay_a_1_5
  assign CAN_FIRE_RL_relay_a_1_5 = mac_5_RDY_get_A && mac_1_RDY_relay_A ;
  assign WILL_FIRE_RL_relay_a_1_5 = CAN_FIRE_RL_relay_a_1_5 ;

  // rule RL_get_ext_inpB2
  assign CAN_FIRE_RL_get_ext_inpB2 = inpB2_fifo_rv[16] ;
  assign WILL_FIRE_RL_get_ext_inpB2 = CAN_FIRE_RL_get_ext_inpB2 ;

  // rule RL_get_ext_inpC2
  assign CAN_FIRE_RL_get_ext_inpC2 = inpC2_fifo_rv[32] && mac_5_RDY_get_C ;
  assign WILL_FIRE_RL_get_ext_inpC2 = CAN_FIRE_RL_get_ext_inpC2 ;

  // rule RL_get_ext_inpS2
  assign CAN_FIRE_RL_get_ext_inpS2 =
	     inpS2_fifo_rv[1] && mac_5_RDY_get_S1_or_S2 ;
  assign WILL_FIRE_RL_get_ext_inpS2 = CAN_FIRE_RL_get_ext_inpS2 ;

  // rule RL_relay_s_5_6
  assign CAN_FIRE_RL_relay_s_5_6 =
	     mac_5_RDY_relay_S && mac_6_RDY_get_S1_or_S2 ;
  assign WILL_FIRE_RL_relay_s_5_6 = CAN_FIRE_RL_relay_s_5_6 ;

  // rule RL_relay_s_6_7
  assign CAN_FIRE_RL_relay_s_6_7 =
	     mac_6_RDY_relay_S && mac_7_RDY_get_S1_or_S2 ;
  assign WILL_FIRE_RL_relay_s_6_7 = CAN_FIRE_RL_relay_s_6_7 ;

  // rule RL_relay_s_7_8
  assign CAN_FIRE_RL_relay_s_7_8 =
	     mac_7_RDY_relay_S && mac_8_RDY_get_S1_or_S2 ;
  assign WILL_FIRE_RL_relay_s_7_8 = CAN_FIRE_RL_relay_s_7_8 ;

  // rule RL_outp3
  assign CAN_FIRE_RL_outp3 =
	     mac_12_RDY_output_MAC && !out3_fifo_rv_port1__read[32] ;
  assign WILL_FIRE_RL_outp3 = CAN_FIRE_RL_outp3 ;

  // rule RL_relay_a_8_12
  assign CAN_FIRE_RL_relay_a_8_12 = mac_12_RDY_get_A && mac_8_RDY_relay_A ;
  assign WILL_FIRE_RL_relay_a_8_12 = CAN_FIRE_RL_relay_a_8_12 ;

  // rule RL_relay_b_11_12
  assign CAN_FIRE_RL_relay_b_11_12 = mac_11_RDY_relay_B ;
  assign WILL_FIRE_RL_relay_b_11_12 = mac_11_RDY_relay_B ;

  // rule RL_relay_c_11_12
  assign CAN_FIRE_RL_relay_c_11_12 =
	     mac_12_RDY_get_C && mac_11_RDY_output_MAC ;
  assign WILL_FIRE_RL_relay_c_11_12 = CAN_FIRE_RL_relay_c_11_12 ;

  // rule RL_relay_a_7_11
  assign CAN_FIRE_RL_relay_a_7_11 = mac_11_RDY_get_A && mac_7_RDY_relay_A ;
  assign WILL_FIRE_RL_relay_a_7_11 = CAN_FIRE_RL_relay_a_7_11 ;

  // rule RL_relay_b_10_11
  assign CAN_FIRE_RL_relay_b_10_11 = mac_10_RDY_relay_B ;
  assign WILL_FIRE_RL_relay_b_10_11 = mac_10_RDY_relay_B ;

  // rule RL_relay_c_10_11
  assign CAN_FIRE_RL_relay_c_10_11 =
	     mac_11_RDY_get_C && mac_10_RDY_output_MAC ;
  assign WILL_FIRE_RL_relay_c_10_11 = CAN_FIRE_RL_relay_c_10_11 ;

  // rule RL_relay_a_6_10
  assign CAN_FIRE_RL_relay_a_6_10 = mac_10_RDY_get_A && mac_6_RDY_relay_A ;
  assign WILL_FIRE_RL_relay_a_6_10 = CAN_FIRE_RL_relay_a_6_10 ;

  // rule RL_relay_b_9_10
  assign CAN_FIRE_RL_relay_b_9_10 = mac_9_RDY_relay_B ;
  assign WILL_FIRE_RL_relay_b_9_10 = mac_9_RDY_relay_B ;

  // rule RL_relay_c_9_10
  assign CAN_FIRE_RL_relay_c_9_10 = mac_10_RDY_get_C && mac_9_RDY_output_MAC ;
  assign WILL_FIRE_RL_relay_c_9_10 = CAN_FIRE_RL_relay_c_9_10 ;

  // rule RL_relay_a_5_9
  assign CAN_FIRE_RL_relay_a_5_9 = mac_9_RDY_get_A && mac_5_RDY_relay_A ;
  assign WILL_FIRE_RL_relay_a_5_9 = CAN_FIRE_RL_relay_a_5_9 ;

  // rule RL_get_ext_inpB3
  assign CAN_FIRE_RL_get_ext_inpB3 = inpB3_fifo_rv[16] ;
  assign WILL_FIRE_RL_get_ext_inpB3 = CAN_FIRE_RL_get_ext_inpB3 ;

  // rule RL_get_ext_inpC3
  assign CAN_FIRE_RL_get_ext_inpC3 = inpC3_fifo_rv[32] && mac_9_RDY_get_C ;
  assign WILL_FIRE_RL_get_ext_inpC3 = CAN_FIRE_RL_get_ext_inpC3 ;

  // rule RL_get_ext_inpS3
  assign CAN_FIRE_RL_get_ext_inpS3 =
	     inpS3_fifo_rv[1] && mac_9_RDY_get_S1_or_S2 ;
  assign WILL_FIRE_RL_get_ext_inpS3 = CAN_FIRE_RL_get_ext_inpS3 ;

  // rule RL_relay_s_9_10
  assign CAN_FIRE_RL_relay_s_9_10 =
	     mac_9_RDY_relay_S && mac_10_RDY_get_S1_or_S2 ;
  assign WILL_FIRE_RL_relay_s_9_10 = CAN_FIRE_RL_relay_s_9_10 ;

  // rule RL_relay_s_10_11
  assign CAN_FIRE_RL_relay_s_10_11 =
	     mac_10_RDY_relay_S && mac_11_RDY_get_S1_or_S2 ;
  assign WILL_FIRE_RL_relay_s_10_11 = CAN_FIRE_RL_relay_s_10_11 ;

  // rule RL_relay_s_11_12
  assign CAN_FIRE_RL_relay_s_11_12 =
	     mac_11_RDY_relay_S && mac_12_RDY_get_S1_or_S2 ;
  assign WILL_FIRE_RL_relay_s_11_12 = CAN_FIRE_RL_relay_s_11_12 ;

  // rule RL_outp4
  assign CAN_FIRE_RL_outp4 =
	     mac_16_RDY_output_MAC && !out4_fifo_rv_port1__read[32] ;
  assign WILL_FIRE_RL_outp4 = CAN_FIRE_RL_outp4 ;

  // rule RL_relay_a_12_16
  assign CAN_FIRE_RL_relay_a_12_16 = mac_16_RDY_get_A && mac_12_RDY_relay_A ;
  assign WILL_FIRE_RL_relay_a_12_16 = CAN_FIRE_RL_relay_a_12_16 ;

  // rule RL_relay_b_15_16
  assign CAN_FIRE_RL_relay_b_15_16 = mac_15_RDY_relay_B ;
  assign WILL_FIRE_RL_relay_b_15_16 = mac_15_RDY_relay_B ;

  // rule RL_relay_c_15_16
  assign CAN_FIRE_RL_relay_c_15_16 =
	     mac_16_RDY_get_C && mac_15_RDY_output_MAC ;
  assign WILL_FIRE_RL_relay_c_15_16 = CAN_FIRE_RL_relay_c_15_16 ;

  // rule RL_relay_a_11_15
  assign CAN_FIRE_RL_relay_a_11_15 = mac_15_RDY_get_A && mac_11_RDY_relay_A ;
  assign WILL_FIRE_RL_relay_a_11_15 = CAN_FIRE_RL_relay_a_11_15 ;

  // rule RL_relay_b_14_15
  assign CAN_FIRE_RL_relay_b_14_15 = mac_14_RDY_relay_B ;
  assign WILL_FIRE_RL_relay_b_14_15 = mac_14_RDY_relay_B ;

  // rule RL_relay_c_14_15
  assign CAN_FIRE_RL_relay_c_14_15 =
	     mac_15_RDY_get_C && mac_14_RDY_output_MAC ;
  assign WILL_FIRE_RL_relay_c_14_15 = CAN_FIRE_RL_relay_c_14_15 ;

  // rule RL_relay_a_10_14
  assign CAN_FIRE_RL_relay_a_10_14 = mac_14_RDY_get_A && mac_10_RDY_relay_A ;
  assign WILL_FIRE_RL_relay_a_10_14 = CAN_FIRE_RL_relay_a_10_14 ;

  // rule RL_relay_b_13_14
  assign CAN_FIRE_RL_relay_b_13_14 = mac_13_RDY_relay_B ;
  assign WILL_FIRE_RL_relay_b_13_14 = mac_13_RDY_relay_B ;

  // rule RL_relay_c_13_14
  assign CAN_FIRE_RL_relay_c_13_14 =
	     mac_14_RDY_get_C && mac_13_RDY_output_MAC ;
  assign WILL_FIRE_RL_relay_c_13_14 = CAN_FIRE_RL_relay_c_13_14 ;

  // rule RL_relay_a_9_13
  assign CAN_FIRE_RL_relay_a_9_13 = mac_13_RDY_get_A && mac_9_RDY_relay_A ;
  assign WILL_FIRE_RL_relay_a_9_13 = CAN_FIRE_RL_relay_a_9_13 ;

  // rule RL_get_ext_inpB4
  assign CAN_FIRE_RL_get_ext_inpB4 = inpB4_fifo_rv[16] ;
  assign WILL_FIRE_RL_get_ext_inpB4 = CAN_FIRE_RL_get_ext_inpB4 ;

  // rule RL_get_ext_inpC4
  assign CAN_FIRE_RL_get_ext_inpC4 = inpC4_fifo_rv[32] && mac_13_RDY_get_C ;
  assign WILL_FIRE_RL_get_ext_inpC4 = CAN_FIRE_RL_get_ext_inpC4 ;

  // rule RL_get_ext_inpS4
  assign CAN_FIRE_RL_get_ext_inpS4 =
	     inpS4_fifo_rv[1] && mac_13_RDY_get_S1_or_S2 ;
  assign WILL_FIRE_RL_get_ext_inpS4 = CAN_FIRE_RL_get_ext_inpS4 ;

  // rule RL_relay_s_13_14
  assign CAN_FIRE_RL_relay_s_13_14 =
	     mac_13_RDY_relay_S && mac_14_RDY_get_S1_or_S2 ;
  assign WILL_FIRE_RL_relay_s_13_14 = CAN_FIRE_RL_relay_s_13_14 ;

  // rule RL_relay_s_14_15
  assign CAN_FIRE_RL_relay_s_14_15 =
	     mac_14_RDY_relay_S && mac_15_RDY_get_S1_or_S2 ;
  assign WILL_FIRE_RL_relay_s_14_15 = CAN_FIRE_RL_relay_s_14_15 ;

  // rule RL_relay_s_15_16
  assign CAN_FIRE_RL_relay_s_15_16 =
	     mac_15_RDY_relay_S && mac_16_RDY_get_S1_or_S2 ;
  assign WILL_FIRE_RL_relay_s_15_16 = CAN_FIRE_RL_relay_s_15_16 ;

  // inlined wires
  assign inpA1_fifo_rv_port0__write_1 =
	     { 1'd0, 16'bxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign inpA1_fifo_rv_port1__read =
	     CAN_FIRE_RL_get_ext_inpA1 ?
	       inpA1_fifo_rv_port0__write_1 :
	       inpA1_fifo_rv ;
  assign inpA1_fifo_rv_port1__write_1 = { 1'd1, get_A1_a } ;
  assign inpA1_fifo_rv_port2__read =
	     EN_get_A1 ?
	       inpA1_fifo_rv_port1__write_1 :
	       inpA1_fifo_rv_port1__read ;
  assign inpA2_fifo_rv_port1__read =
	     CAN_FIRE_RL_get_ext_inpA2 ?
	       inpA1_fifo_rv_port0__write_1 :
	       inpA2_fifo_rv ;
  assign inpA2_fifo_rv_port1__write_1 = { 1'd1, get_A2_a } ;
  assign inpA2_fifo_rv_port2__read =
	     EN_get_A2 ?
	       inpA2_fifo_rv_port1__write_1 :
	       inpA2_fifo_rv_port1__read ;
  assign inpA3_fifo_rv_port1__read =
	     CAN_FIRE_RL_get_ext_inpA3 ?
	       inpA1_fifo_rv_port0__write_1 :
	       inpA3_fifo_rv ;
  assign inpA3_fifo_rv_port1__write_1 = { 1'd1, get_A3_a } ;
  assign inpA3_fifo_rv_port2__read =
	     EN_get_A3 ?
	       inpA3_fifo_rv_port1__write_1 :
	       inpA3_fifo_rv_port1__read ;
  assign inpA4_fifo_rv_port1__read =
	     CAN_FIRE_RL_get_ext_inpA4 ?
	       inpA1_fifo_rv_port0__write_1 :
	       inpA4_fifo_rv ;
  assign inpA4_fifo_rv_port1__write_1 = { 1'd1, get_A4_a } ;
  assign inpA4_fifo_rv_port2__read =
	     EN_get_A4 ?
	       inpA4_fifo_rv_port1__write_1 :
	       inpA4_fifo_rv_port1__read ;
  assign inpB1_fifo_rv_port1__read =
	     inpB1_fifo_rv[16] ?
	       inpA1_fifo_rv_port0__write_1 :
	       inpB1_fifo_rv ;
  assign inpB1_fifo_rv_port1__write_1 = { 1'd1, get_B1_b } ;
  assign inpB1_fifo_rv_port2__read =
	     EN_get_B1 ?
	       inpB1_fifo_rv_port1__write_1 :
	       inpB1_fifo_rv_port1__read ;
  assign inpB2_fifo_rv_port1__read =
	     inpB2_fifo_rv[16] ?
	       inpA1_fifo_rv_port0__write_1 :
	       inpB2_fifo_rv ;
  assign inpB2_fifo_rv_port1__write_1 = { 1'd1, get_B2_b } ;
  assign inpB2_fifo_rv_port2__read =
	     EN_get_B2 ?
	       inpB2_fifo_rv_port1__write_1 :
	       inpB2_fifo_rv_port1__read ;
  assign inpB3_fifo_rv_port1__read =
	     inpB3_fifo_rv[16] ?
	       inpA1_fifo_rv_port0__write_1 :
	       inpB3_fifo_rv ;
  assign inpB3_fifo_rv_port1__write_1 = { 1'd1, get_B3_b } ;
  assign inpB3_fifo_rv_port2__read =
	     EN_get_B3 ?
	       inpB3_fifo_rv_port1__write_1 :
	       inpB3_fifo_rv_port1__read ;
  assign inpB4_fifo_rv_port1__read =
	     inpB4_fifo_rv[16] ?
	       inpA1_fifo_rv_port0__write_1 :
	       inpB4_fifo_rv ;
  assign inpB4_fifo_rv_port1__write_1 = { 1'd1, get_B4_b } ;
  assign inpB4_fifo_rv_port2__read =
	     EN_get_B4 ?
	       inpB4_fifo_rv_port1__write_1 :
	       inpB4_fifo_rv_port1__read ;
  assign inpC1_fifo_rv_port0__write_1 =
	     { 1'd0,
	       32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign inpC1_fifo_rv_port1__read =
	     CAN_FIRE_RL_get_ext_inpC1 ?
	       inpC1_fifo_rv_port0__write_1 :
	       inpC1_fifo_rv ;
  assign inpC1_fifo_rv_port1__write_1 = { 1'd1, get_C1_c } ;
  assign inpC1_fifo_rv_port2__read =
	     EN_get_C1 ?
	       inpC1_fifo_rv_port1__write_1 :
	       inpC1_fifo_rv_port1__read ;
  assign inpC2_fifo_rv_port1__read =
	     CAN_FIRE_RL_get_ext_inpC2 ?
	       inpC1_fifo_rv_port0__write_1 :
	       inpC2_fifo_rv ;
  assign inpC2_fifo_rv_port1__write_1 = { 1'd1, get_C2_c } ;
  assign inpC2_fifo_rv_port2__read =
	     EN_get_C2 ?
	       inpC2_fifo_rv_port1__write_1 :
	       inpC2_fifo_rv_port1__read ;
  assign inpC3_fifo_rv_port1__read =
	     CAN_FIRE_RL_get_ext_inpC3 ?
	       inpC1_fifo_rv_port0__write_1 :
	       inpC3_fifo_rv ;
  assign inpC3_fifo_rv_port1__write_1 = { 1'd1, get_C3_c } ;
  assign inpC3_fifo_rv_port2__read =
	     EN_get_C3 ?
	       inpC3_fifo_rv_port1__write_1 :
	       inpC3_fifo_rv_port1__read ;
  assign inpC4_fifo_rv_port1__read =
	     CAN_FIRE_RL_get_ext_inpC4 ?
	       inpC1_fifo_rv_port0__write_1 :
	       inpC4_fifo_rv ;
  assign inpC4_fifo_rv_port1__write_1 = { 1'd1, get_C4_c } ;
  assign inpC4_fifo_rv_port2__read =
	     EN_get_C4 ?
	       inpC4_fifo_rv_port1__write_1 :
	       inpC4_fifo_rv_port1__read ;
  assign inpS1_fifo_rv_port0__write_1 =
	     { 1'd0, 1'bx /* unspecified value */  } ;
  assign inpS1_fifo_rv_port1__read =
	     CAN_FIRE_RL_get_ext_inpS1 ?
	       inpS1_fifo_rv_port0__write_1 :
	       inpS1_fifo_rv ;
  assign inpS1_fifo_rv_port1__write_1 = { 1'd1, get_S1_s } ;
  assign inpS1_fifo_rv_port2__read =
	     EN_get_S1 ?
	       inpS1_fifo_rv_port1__write_1 :
	       inpS1_fifo_rv_port1__read ;
  assign inpS2_fifo_rv_port1__read =
	     CAN_FIRE_RL_get_ext_inpS2 ?
	       inpS1_fifo_rv_port0__write_1 :
	       inpS2_fifo_rv ;
  assign inpS2_fifo_rv_port1__write_1 = { 1'd1, get_S2_s } ;
  assign inpS2_fifo_rv_port2__read =
	     EN_get_S2 ?
	       inpS2_fifo_rv_port1__write_1 :
	       inpS2_fifo_rv_port1__read ;
  assign inpS3_fifo_rv_port1__read =
	     CAN_FIRE_RL_get_ext_inpS3 ?
	       inpS1_fifo_rv_port0__write_1 :
	       inpS3_fifo_rv ;
  assign inpS3_fifo_rv_port1__write_1 = { 1'd1, get_S3_s } ;
  assign inpS3_fifo_rv_port2__read =
	     EN_get_S3 ?
	       inpS3_fifo_rv_port1__write_1 :
	       inpS3_fifo_rv_port1__read ;
  assign inpS4_fifo_rv_port1__read =
	     CAN_FIRE_RL_get_ext_inpS4 ?
	       inpS1_fifo_rv_port0__write_1 :
	       inpS4_fifo_rv ;
  assign inpS4_fifo_rv_port1__write_1 = { 1'd1, get_S4_s } ;
  assign inpS4_fifo_rv_port2__read =
	     EN_get_S4 ?
	       inpS4_fifo_rv_port1__write_1 :
	       inpS4_fifo_rv_port1__read ;
  assign out1_fifo_rv_port1__read =
	     EN_output1_MAC ? inpC1_fifo_rv_port0__write_1 : out1_fifo_rv ;
  assign out1_fifo_rv_port1__write_1 = { 1'd1, mac_4_output_MAC } ;
  assign out1_fifo_rv_port2__read =
	     CAN_FIRE_RL_outp1 ?
	       out1_fifo_rv_port1__write_1 :
	       out1_fifo_rv_port1__read ;
  assign out2_fifo_rv_port1__read =
	     EN_output2_MAC ? inpC1_fifo_rv_port0__write_1 : out2_fifo_rv ;
  assign out2_fifo_rv_port1__write_1 = { 1'd1, mac_8_output_MAC } ;
  assign out2_fifo_rv_port2__read =
	     CAN_FIRE_RL_outp2 ?
	       out2_fifo_rv_port1__write_1 :
	       out2_fifo_rv_port1__read ;
  assign out3_fifo_rv_port1__read =
	     EN_output3_MAC ? inpC1_fifo_rv_port0__write_1 : out3_fifo_rv ;
  assign out3_fifo_rv_port1__write_1 = { 1'd1, mac_12_output_MAC } ;
  assign out3_fifo_rv_port2__read =
	     CAN_FIRE_RL_outp3 ?
	       out3_fifo_rv_port1__write_1 :
	       out3_fifo_rv_port1__read ;
  assign out4_fifo_rv_port1__read =
	     EN_output4_MAC ? inpC1_fifo_rv_port0__write_1 : out4_fifo_rv ;
  assign out4_fifo_rv_port1__write_1 = { 1'd1, mac_16_output_MAC } ;
  assign out4_fifo_rv_port2__read =
	     CAN_FIRE_RL_outp4 ?
	       out4_fifo_rv_port1__write_1 :
	       out4_fifo_rv_port1__read ;

  // register inpA1_fifo_rv
  assign inpA1_fifo_rv_D_IN = inpA1_fifo_rv_port2__read ;
  assign inpA1_fifo_rv_EN = 1'b1 ;

  // register inpA2_fifo_rv
  assign inpA2_fifo_rv_D_IN = inpA2_fifo_rv_port2__read ;
  assign inpA2_fifo_rv_EN = 1'b1 ;

  // register inpA3_fifo_rv
  assign inpA3_fifo_rv_D_IN = inpA3_fifo_rv_port2__read ;
  assign inpA3_fifo_rv_EN = 1'b1 ;

  // register inpA4_fifo_rv
  assign inpA4_fifo_rv_D_IN = inpA4_fifo_rv_port2__read ;
  assign inpA4_fifo_rv_EN = 1'b1 ;

  // register inpB1_fifo_rv
  assign inpB1_fifo_rv_D_IN = inpB1_fifo_rv_port2__read ;
  assign inpB1_fifo_rv_EN = 1'b1 ;

  // register inpB2_fifo_rv
  assign inpB2_fifo_rv_D_IN = inpB2_fifo_rv_port2__read ;
  assign inpB2_fifo_rv_EN = 1'b1 ;

  // register inpB3_fifo_rv
  assign inpB3_fifo_rv_D_IN = inpB3_fifo_rv_port2__read ;
  assign inpB3_fifo_rv_EN = 1'b1 ;

  // register inpB4_fifo_rv
  assign inpB4_fifo_rv_D_IN = inpB4_fifo_rv_port2__read ;
  assign inpB4_fifo_rv_EN = 1'b1 ;

  // register inpC1_fifo_rv
  assign inpC1_fifo_rv_D_IN = inpC1_fifo_rv_port2__read ;
  assign inpC1_fifo_rv_EN = 1'b1 ;

  // register inpC2_fifo_rv
  assign inpC2_fifo_rv_D_IN = inpC2_fifo_rv_port2__read ;
  assign inpC2_fifo_rv_EN = 1'b1 ;

  // register inpC3_fifo_rv
  assign inpC3_fifo_rv_D_IN = inpC3_fifo_rv_port2__read ;
  assign inpC3_fifo_rv_EN = 1'b1 ;

  // register inpC4_fifo_rv
  assign inpC4_fifo_rv_D_IN = inpC4_fifo_rv_port2__read ;
  assign inpC4_fifo_rv_EN = 1'b1 ;

  // register inpS1_fifo_rv
  assign inpS1_fifo_rv_D_IN = inpS1_fifo_rv_port2__read ;
  assign inpS1_fifo_rv_EN = 1'b1 ;

  // register inpS2_fifo_rv
  assign inpS2_fifo_rv_D_IN = inpS2_fifo_rv_port2__read ;
  assign inpS2_fifo_rv_EN = 1'b1 ;

  // register inpS3_fifo_rv
  assign inpS3_fifo_rv_D_IN = inpS3_fifo_rv_port2__read ;
  assign inpS3_fifo_rv_EN = 1'b1 ;

  // register inpS4_fifo_rv
  assign inpS4_fifo_rv_D_IN = inpS4_fifo_rv_port2__read ;
  assign inpS4_fifo_rv_EN = 1'b1 ;

  // register out1_fifo_rv
  assign out1_fifo_rv_D_IN = out1_fifo_rv_port2__read ;
  assign out1_fifo_rv_EN = 1'b1 ;

  // register out2_fifo_rv
  assign out2_fifo_rv_D_IN = out2_fifo_rv_port2__read ;
  assign out2_fifo_rv_EN = 1'b1 ;

  // register out3_fifo_rv
  assign out3_fifo_rv_D_IN = out3_fifo_rv_port2__read ;
  assign out3_fifo_rv_EN = 1'b1 ;

  // register out4_fifo_rv
  assign out4_fifo_rv_D_IN = out4_fifo_rv_port2__read ;
  assign out4_fifo_rv_EN = 1'b1 ;

  // submodule mac_1
  assign mac_1_get_A_a = inpA1_fifo_rv[15:0] ;
  assign mac_1_get_B_b = inpB1_fifo_rv[15:0] ;
  assign mac_1_get_C_c = inpC1_fifo_rv[31:0] ;
  assign mac_1_get_S1_or_S2_s1_or_s2 = inpS1_fifo_rv[0] ;
  assign mac_1_EN_get_A = CAN_FIRE_RL_get_ext_inpA1 ;
  assign mac_1_EN_get_B = CAN_FIRE_RL_get_ext_inpB1 ;
  assign mac_1_EN_get_C = CAN_FIRE_RL_get_ext_inpC1 ;
  assign mac_1_EN_get_S1_or_S2 = CAN_FIRE_RL_get_ext_inpS1 ;
  assign mac_1_EN_output_MAC = CAN_FIRE_RL_relay_c_1_2 ;

  // submodule mac_10
  assign mac_10_get_A_a = mac_6_relay_A ;
  assign mac_10_get_B_b = mac_9_relay_B ;
  assign mac_10_get_C_c = mac_9_output_MAC ;
  assign mac_10_get_S1_or_S2_s1_or_s2 = mac_9_relay_S ;
  assign mac_10_EN_get_A = CAN_FIRE_RL_relay_a_6_10 ;
  assign mac_10_EN_get_B = mac_9_RDY_relay_B ;
  assign mac_10_EN_get_C = CAN_FIRE_RL_relay_c_9_10 ;
  assign mac_10_EN_get_S1_or_S2 = CAN_FIRE_RL_relay_s_9_10 ;
  assign mac_10_EN_output_MAC = CAN_FIRE_RL_relay_c_10_11 ;

  // submodule mac_11
  assign mac_11_get_A_a = mac_7_relay_A ;
  assign mac_11_get_B_b = mac_10_relay_B ;
  assign mac_11_get_C_c = mac_10_output_MAC ;
  assign mac_11_get_S1_or_S2_s1_or_s2 = mac_10_relay_S ;
  assign mac_11_EN_get_A = CAN_FIRE_RL_relay_a_7_11 ;
  assign mac_11_EN_get_B = mac_10_RDY_relay_B ;
  assign mac_11_EN_get_C = CAN_FIRE_RL_relay_c_10_11 ;
  assign mac_11_EN_get_S1_or_S2 = CAN_FIRE_RL_relay_s_10_11 ;
  assign mac_11_EN_output_MAC = CAN_FIRE_RL_relay_c_11_12 ;

  // submodule mac_12
  assign mac_12_get_A_a = mac_8_relay_A ;
  assign mac_12_get_B_b = mac_11_relay_B ;
  assign mac_12_get_C_c = mac_11_output_MAC ;
  assign mac_12_get_S1_or_S2_s1_or_s2 = mac_11_relay_S ;
  assign mac_12_EN_get_A = CAN_FIRE_RL_relay_a_8_12 ;
  assign mac_12_EN_get_B = mac_11_RDY_relay_B ;
  assign mac_12_EN_get_C = CAN_FIRE_RL_relay_c_11_12 ;
  assign mac_12_EN_get_S1_or_S2 = CAN_FIRE_RL_relay_s_11_12 ;
  assign mac_12_EN_output_MAC = CAN_FIRE_RL_outp3 ;

  // submodule mac_13
  assign mac_13_get_A_a = mac_9_relay_A ;
  assign mac_13_get_B_b = inpB4_fifo_rv[15:0] ;
  assign mac_13_get_C_c = inpC4_fifo_rv[31:0] ;
  assign mac_13_get_S1_or_S2_s1_or_s2 = inpS4_fifo_rv[0] ;
  assign mac_13_EN_get_A = CAN_FIRE_RL_relay_a_9_13 ;
  assign mac_13_EN_get_B = CAN_FIRE_RL_get_ext_inpB4 ;
  assign mac_13_EN_get_C = CAN_FIRE_RL_get_ext_inpC4 ;
  assign mac_13_EN_get_S1_or_S2 = CAN_FIRE_RL_get_ext_inpS4 ;
  assign mac_13_EN_output_MAC = CAN_FIRE_RL_relay_c_13_14 ;

  // submodule mac_14
  assign mac_14_get_A_a = mac_10_relay_A ;
  assign mac_14_get_B_b = mac_13_relay_B ;
  assign mac_14_get_C_c = mac_13_output_MAC ;
  assign mac_14_get_S1_or_S2_s1_or_s2 = mac_13_relay_S ;
  assign mac_14_EN_get_A = CAN_FIRE_RL_relay_a_10_14 ;
  assign mac_14_EN_get_B = mac_13_RDY_relay_B ;
  assign mac_14_EN_get_C = CAN_FIRE_RL_relay_c_13_14 ;
  assign mac_14_EN_get_S1_or_S2 = CAN_FIRE_RL_relay_s_13_14 ;
  assign mac_14_EN_output_MAC = CAN_FIRE_RL_relay_c_14_15 ;

  // submodule mac_15
  assign mac_15_get_A_a = mac_11_relay_A ;
  assign mac_15_get_B_b = mac_14_relay_B ;
  assign mac_15_get_C_c = mac_14_output_MAC ;
  assign mac_15_get_S1_or_S2_s1_or_s2 = mac_14_relay_S ;
  assign mac_15_EN_get_A = CAN_FIRE_RL_relay_a_11_15 ;
  assign mac_15_EN_get_B = mac_14_RDY_relay_B ;
  assign mac_15_EN_get_C = CAN_FIRE_RL_relay_c_14_15 ;
  assign mac_15_EN_get_S1_or_S2 = CAN_FIRE_RL_relay_s_14_15 ;
  assign mac_15_EN_output_MAC = CAN_FIRE_RL_relay_c_15_16 ;

  // submodule mac_16
  assign mac_16_get_A_a = mac_12_relay_A ;
  assign mac_16_get_B_b = mac_15_relay_B ;
  assign mac_16_get_C_c = mac_15_output_MAC ;
  assign mac_16_get_S1_or_S2_s1_or_s2 = mac_15_relay_S ;
  assign mac_16_EN_get_A = CAN_FIRE_RL_relay_a_12_16 ;
  assign mac_16_EN_get_B = mac_15_RDY_relay_B ;
  assign mac_16_EN_get_C = CAN_FIRE_RL_relay_c_15_16 ;
  assign mac_16_EN_get_S1_or_S2 = CAN_FIRE_RL_relay_s_15_16 ;
  assign mac_16_EN_output_MAC = CAN_FIRE_RL_outp4 ;

  // submodule mac_2
  assign mac_2_get_A_a = inpA2_fifo_rv[15:0] ;
  assign mac_2_get_B_b = mac_1_relay_B ;
  assign mac_2_get_C_c = mac_1_output_MAC ;
  assign mac_2_get_S1_or_S2_s1_or_s2 = mac_1_relay_S ;
  assign mac_2_EN_get_A = CAN_FIRE_RL_get_ext_inpA2 ;
  assign mac_2_EN_get_B = mac_1_RDY_relay_B ;
  assign mac_2_EN_get_C = CAN_FIRE_RL_relay_c_1_2 ;
  assign mac_2_EN_get_S1_or_S2 = CAN_FIRE_RL_relay_s_1_2 ;
  assign mac_2_EN_output_MAC = CAN_FIRE_RL_relay_c_2_3 ;

  // submodule mac_3
  assign mac_3_get_A_a = inpA3_fifo_rv[15:0] ;
  assign mac_3_get_B_b = mac_2_relay_B ;
  assign mac_3_get_C_c = mac_2_output_MAC ;
  assign mac_3_get_S1_or_S2_s1_or_s2 = mac_2_relay_S ;
  assign mac_3_EN_get_A = CAN_FIRE_RL_get_ext_inpA3 ;
  assign mac_3_EN_get_B = mac_2_RDY_relay_B ;
  assign mac_3_EN_get_C = CAN_FIRE_RL_relay_c_2_3 ;
  assign mac_3_EN_get_S1_or_S2 = CAN_FIRE_RL_relay_s_2_3 ;
  assign mac_3_EN_output_MAC = CAN_FIRE_RL_relay_c_3_4 ;

  // submodule mac_4
  assign mac_4_get_A_a = inpA4_fifo_rv[15:0] ;
  assign mac_4_get_B_b = mac_3_relay_B ;
  assign mac_4_get_C_c = mac_3_output_MAC ;
  assign mac_4_get_S1_or_S2_s1_or_s2 = mac_3_relay_S ;
  assign mac_4_EN_get_A = CAN_FIRE_RL_get_ext_inpA4 ;
  assign mac_4_EN_get_B = mac_3_RDY_relay_B ;
  assign mac_4_EN_get_C = CAN_FIRE_RL_relay_c_3_4 ;
  assign mac_4_EN_get_S1_or_S2 = CAN_FIRE_RL_relay_s_3_4 ;
  assign mac_4_EN_output_MAC = CAN_FIRE_RL_outp1 ;

  // submodule mac_5
  assign mac_5_get_A_a = mac_1_relay_A ;
  assign mac_5_get_B_b = inpB2_fifo_rv[15:0] ;
  assign mac_5_get_C_c = inpC2_fifo_rv[31:0] ;
  assign mac_5_get_S1_or_S2_s1_or_s2 = inpS2_fifo_rv[0] ;
  assign mac_5_EN_get_A = CAN_FIRE_RL_relay_a_1_5 ;
  assign mac_5_EN_get_B = CAN_FIRE_RL_get_ext_inpB2 ;
  assign mac_5_EN_get_C = CAN_FIRE_RL_get_ext_inpC2 ;
  assign mac_5_EN_get_S1_or_S2 = CAN_FIRE_RL_get_ext_inpS2 ;
  assign mac_5_EN_output_MAC = CAN_FIRE_RL_relay_c_5_6 ;

  // submodule mac_6
  assign mac_6_get_A_a = mac_2_relay_A ;
  assign mac_6_get_B_b = mac_5_relay_B ;
  assign mac_6_get_C_c = mac_5_output_MAC ;
  assign mac_6_get_S1_or_S2_s1_or_s2 = mac_5_relay_S ;
  assign mac_6_EN_get_A = CAN_FIRE_RL_relay_a_2_6 ;
  assign mac_6_EN_get_B = mac_5_RDY_relay_B ;
  assign mac_6_EN_get_C = CAN_FIRE_RL_relay_c_5_6 ;
  assign mac_6_EN_get_S1_or_S2 = CAN_FIRE_RL_relay_s_5_6 ;
  assign mac_6_EN_output_MAC = CAN_FIRE_RL_relay_c_6_7 ;

  // submodule mac_7
  assign mac_7_get_A_a = mac_3_relay_A ;
  assign mac_7_get_B_b = mac_6_relay_B ;
  assign mac_7_get_C_c = mac_6_output_MAC ;
  assign mac_7_get_S1_or_S2_s1_or_s2 = mac_6_relay_S ;
  assign mac_7_EN_get_A = CAN_FIRE_RL_relay_a_3_7 ;
  assign mac_7_EN_get_B = mac_6_RDY_relay_B ;
  assign mac_7_EN_get_C = CAN_FIRE_RL_relay_c_6_7 ;
  assign mac_7_EN_get_S1_or_S2 = CAN_FIRE_RL_relay_s_6_7 ;
  assign mac_7_EN_output_MAC = CAN_FIRE_RL_relay_c_7_8 ;

  // submodule mac_8
  assign mac_8_get_A_a = mac_4_relay_A ;
  assign mac_8_get_B_b = mac_7_relay_B ;
  assign mac_8_get_C_c = mac_7_output_MAC ;
  assign mac_8_get_S1_or_S2_s1_or_s2 = mac_7_relay_S ;
  assign mac_8_EN_get_A = CAN_FIRE_RL_relay_a_4_8 ;
  assign mac_8_EN_get_B = mac_7_RDY_relay_B ;
  assign mac_8_EN_get_C = CAN_FIRE_RL_relay_c_7_8 ;
  assign mac_8_EN_get_S1_or_S2 = CAN_FIRE_RL_relay_s_7_8 ;
  assign mac_8_EN_output_MAC = CAN_FIRE_RL_outp2 ;

  // submodule mac_9
  assign mac_9_get_A_a = mac_5_relay_A ;
  assign mac_9_get_B_b = inpB3_fifo_rv[15:0] ;
  assign mac_9_get_C_c = inpC3_fifo_rv[31:0] ;
  assign mac_9_get_S1_or_S2_s1_or_s2 = inpS3_fifo_rv[0] ;
  assign mac_9_EN_get_A = CAN_FIRE_RL_relay_a_5_9 ;
  assign mac_9_EN_get_B = CAN_FIRE_RL_get_ext_inpB3 ;
  assign mac_9_EN_get_C = CAN_FIRE_RL_get_ext_inpC3 ;
  assign mac_9_EN_get_S1_or_S2 = CAN_FIRE_RL_get_ext_inpS3 ;
  assign mac_9_EN_output_MAC = CAN_FIRE_RL_relay_c_9_10 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        inpA1_fifo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 16'bxxxxxxxxxxxxxxxx /* unspecified value */  };
	inpA2_fifo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 16'bxxxxxxxxxxxxxxxx /* unspecified value */  };
	inpA3_fifo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 16'bxxxxxxxxxxxxxxxx /* unspecified value */  };
	inpA4_fifo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 16'bxxxxxxxxxxxxxxxx /* unspecified value */  };
	inpB1_fifo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 16'bxxxxxxxxxxxxxxxx /* unspecified value */  };
	inpB2_fifo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 16'bxxxxxxxxxxxxxxxx /* unspecified value */  };
	inpB3_fifo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 16'bxxxxxxxxxxxxxxxx /* unspecified value */  };
	inpB4_fifo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 16'bxxxxxxxxxxxxxxxx /* unspecified value */  };
	inpC1_fifo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	inpC2_fifo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	inpC3_fifo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	inpC4_fifo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	inpS1_fifo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 1'bx /* unspecified value */  };
	inpS2_fifo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 1'bx /* unspecified value */  };
	inpS3_fifo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 1'bx /* unspecified value */  };
	inpS4_fifo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 1'bx /* unspecified value */  };
	out1_fifo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	out2_fifo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	out3_fifo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	out4_fifo_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
      end
    else
      begin
        if (inpA1_fifo_rv_EN)
	  inpA1_fifo_rv <= `BSV_ASSIGNMENT_DELAY inpA1_fifo_rv_D_IN;
	if (inpA2_fifo_rv_EN)
	  inpA2_fifo_rv <= `BSV_ASSIGNMENT_DELAY inpA2_fifo_rv_D_IN;
	if (inpA3_fifo_rv_EN)
	  inpA3_fifo_rv <= `BSV_ASSIGNMENT_DELAY inpA3_fifo_rv_D_IN;
	if (inpA4_fifo_rv_EN)
	  inpA4_fifo_rv <= `BSV_ASSIGNMENT_DELAY inpA4_fifo_rv_D_IN;
	if (inpB1_fifo_rv_EN)
	  inpB1_fifo_rv <= `BSV_ASSIGNMENT_DELAY inpB1_fifo_rv_D_IN;
	if (inpB2_fifo_rv_EN)
	  inpB2_fifo_rv <= `BSV_ASSIGNMENT_DELAY inpB2_fifo_rv_D_IN;
	if (inpB3_fifo_rv_EN)
	  inpB3_fifo_rv <= `BSV_ASSIGNMENT_DELAY inpB3_fifo_rv_D_IN;
	if (inpB4_fifo_rv_EN)
	  inpB4_fifo_rv <= `BSV_ASSIGNMENT_DELAY inpB4_fifo_rv_D_IN;
	if (inpC1_fifo_rv_EN)
	  inpC1_fifo_rv <= `BSV_ASSIGNMENT_DELAY inpC1_fifo_rv_D_IN;
	if (inpC2_fifo_rv_EN)
	  inpC2_fifo_rv <= `BSV_ASSIGNMENT_DELAY inpC2_fifo_rv_D_IN;
	if (inpC3_fifo_rv_EN)
	  inpC3_fifo_rv <= `BSV_ASSIGNMENT_DELAY inpC3_fifo_rv_D_IN;
	if (inpC4_fifo_rv_EN)
	  inpC4_fifo_rv <= `BSV_ASSIGNMENT_DELAY inpC4_fifo_rv_D_IN;
	if (inpS1_fifo_rv_EN)
	  inpS1_fifo_rv <= `BSV_ASSIGNMENT_DELAY inpS1_fifo_rv_D_IN;
	if (inpS2_fifo_rv_EN)
	  inpS2_fifo_rv <= `BSV_ASSIGNMENT_DELAY inpS2_fifo_rv_D_IN;
	if (inpS3_fifo_rv_EN)
	  inpS3_fifo_rv <= `BSV_ASSIGNMENT_DELAY inpS3_fifo_rv_D_IN;
	if (inpS4_fifo_rv_EN)
	  inpS4_fifo_rv <= `BSV_ASSIGNMENT_DELAY inpS4_fifo_rv_D_IN;
	if (out1_fifo_rv_EN)
	  out1_fifo_rv <= `BSV_ASSIGNMENT_DELAY out1_fifo_rv_D_IN;
	if (out2_fifo_rv_EN)
	  out2_fifo_rv <= `BSV_ASSIGNMENT_DELAY out2_fifo_rv_D_IN;
	if (out3_fifo_rv_EN)
	  out3_fifo_rv <= `BSV_ASSIGNMENT_DELAY out3_fifo_rv_D_IN;
	if (out4_fifo_rv_EN)
	  out4_fifo_rv <= `BSV_ASSIGNMENT_DELAY out4_fifo_rv_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    inpA1_fifo_rv = 17'h0AAAA;
    inpA2_fifo_rv = 17'h0AAAA;
    inpA3_fifo_rv = 17'h0AAAA;
    inpA4_fifo_rv = 17'h0AAAA;
    inpB1_fifo_rv = 17'h0AAAA;
    inpB2_fifo_rv = 17'h0AAAA;
    inpB3_fifo_rv = 17'h0AAAA;
    inpB4_fifo_rv = 17'h0AAAA;
    inpC1_fifo_rv = 33'h0AAAAAAAA;
    inpC2_fifo_rv = 33'h0AAAAAAAA;
    inpC3_fifo_rv = 33'h0AAAAAAAA;
    inpC4_fifo_rv = 33'h0AAAAAAAA;
    inpS1_fifo_rv = 2'h2;
    inpS2_fifo_rv = 2'h2;
    inpS3_fifo_rv = 2'h2;
    inpS4_fifo_rv = 2'h2;
    out1_fifo_rv = 33'h0AAAAAAAA;
    out2_fifo_rv = 33'h0AAAAAAAA;
    out3_fifo_rv = 33'h0AAAAAAAA;
    out4_fifo_rv = 33'h0AAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mksystolic_array

